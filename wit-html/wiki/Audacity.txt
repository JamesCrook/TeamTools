__NOTOC__
{{ATK_Header}}
This is the spec for the interactive diagram which shows a display of Audacity
classes.  Here's the result:

-----
{{#widget:WikiDiagram|page=Audacity|init=yes}}
-----

The detailed data for the chart follows.
<pre>START</pre>
<pre>ADD:DATA=

[

{"Overlay":[



{"VStack":[

{
"sizeAs":1,
"HStack":[

{
"sizeAs":2,

"Path":"Snakes1-4",
 "values":[
            {
              "className": "AboutDialog",
              "docString": "<h3>AboutDialog</h3>The AboutDialog shows the program version and developer credits ",
              "snakeStyle": 0
            },

            {
              "className": "AboutDialog",
              "docString": "<h3>AboutDialog</h3>The AboutDialog shows the program version and developer credits ",
              "snakeStyle": 0
            },


         {
           "className": "ProjectFileIO",
           "docString": "<h3>ProjectFileIO</h3>Object associated with a project that manages reading and writing of Audacity project file formats, and autosave ",
           "category":"Projects",
           "snakeStyle": 1
         },
         {
           "className": "ProjectFileIORegistry",
           "docString": "<h3>ProjectFileIORegistry</h3>+No Description"
         },
         {
           "className": "ProjectFileManager",
           "docString": "<h3>ProjectFileManager</h3>+No Description"
         },
         {
           "className": "ProjectHistory",
           "docString": "<h3>ProjectHistory</h3>+No Description"
         },
         {
           "className": "ProjectManager",
           "docString": "<h3>ProjectManager</h3>Object associated with a project for high-level management of the project's lifetime, including creation, destruction, opening from file, importing, pushing undo states, and reverting to saved states "
         },
         {
           "className": "ProjectSelectionManager",
           "docString": "<h3>ProjectSelectionManager</h3>+No Description"
         },
         {
           "className": "ProjectSetter",
           "docString": "<h3>ProjectSetter</h3>+No Description"
         },
         {
           "className": "ProjectSettings",
           "docString": "<h3>ProjectSettings</h3>Holds various per-project settings values, including the sample rate, and sends events to the project when certain values change "
         },
         {
           "className": "ProjectStatus",
           "docString": "<h3>ProjectStatus</h3>+No Description"
         },
         {
           "className": "ProjectWindow",
           "docString": "<h3>ProjectWindow</h3>A top-level window associated with a project, and handling scrollbars and zooming "
         },
         {
           "className": "AudacityProject",
           "docString": "<h3>AudacityProject</h3>The top-level handle to an Audacity project. It serves as a source of events that other objects can bind to, and a container of associated sub-objects that it treats opaquely. It stores a filename and a status message and a few other things. There is very little in this class, most of the intelligence residing in the cooperating attached objects ",
           "isHead": true
         },

         {
           "className": "AppCommandEvent",
           "docString": "<h3>AppCommandEvent</h3>An event 'envelope' for sending Command objects through the wxwidgets event loop ",
           "category":"Commands",
           "snakeStyle": 2
         },
         {
           "className": "ApplyAndSendResponse",
           "docString": "<h3>ApplyAndSendResponse</h3>ApplyAndSendResponse is a DecoratoredCommand that performs the given command and then outputs a status message according to the result. It manages a CommandContext which is passed into its mCommand, so that result messages are routed back to the right place "
         },
         {
           "className": "ApplyMacroDialog",
           "docString": "<h3>ApplyMacroDialog</h3>Shows progress in executing commands in MacroCommands "
         },
         {
           "className": "AudacityCommand",
           "docString": "<h3>AudacityCommand</h3>Base class for command in Audacity "
         },
         {
           "className": "BatchEvalCommand",
           "docString": "<h3>BatchEvalCommand</h3>Given a string representing a command, pass it to the MacroCommands system "
         },
         {
           "className": "BatchEvalCommandType",
           "docString": "<h3>BatchEvalCommandType</h3>The <something>CommandType classes are classes which are going away. They all provided a BuildSignature (what parameters they accept) and Name, but that is now replaced by the AudacityCommand interface "
         },
         {
           "className": "BriefCommandMessageTarget",
           "docString": "<h3>BriefCommandMessageTarget</h3>BriefCommandMessageTarget is a CommandOutputTarget that provides status in a briefer listing "
         },
         {
           "className": "BriefCommandOutputTargets",
           "docString": "<h3>BriefCommandOutputTargets</h3>BriefCommandOutputTargets is a CommandOutputTargets that replaces the status message target with the BriefCommandMessageTarget version "
         },
         {
           "className": "BuiltinCommandsModule",
           "docString": "<h3>BuiltinCommandsModule</h3>Internal module to auto register all built in commands. It is closely modelled on BuiltinEffectsModule "
         },
         {
           "className": "CommandBuilder",
           "docString": "<h3>CommandBuilder</h3>A type of factory for Commands of various sorts "
         },
         {
           "className": "CommandContext",
           "docString": "<h3>CommandContext</h3>CommandContext provides addiitonal information to an 'Apply()' command. It provides the project, and provides output channels for Error, Progress and Status. Status is used for general messaging from a command back to its invoker "
         },
         {
           "className": "CommandDirectory",
           "docString": "<h3>CommandDirectory</h3>Allows registration and lookup (by name) of command types "
         },
         {
           "className": "CommandFlagOptions",
           "docString": "<h3>CommandFlagOptions</h3>No Description"
         },
         {
           "className": "CommandFunctor",
           "docString": "<h3>CommandFunctor</h3>CommandFunctor is a very small class that works with CommandManager. It holds the callback for one command "
         },
         {
           "className": "CommandGroupItem",
           "docString": "<h3>CommandGroupItem</h3>No Description"
         },
         {
           "className": "CommandHandler",
           "docString": "<h3>CommandHandler</h3>Contains methods for applying commands that are passed to it "
         },
         {
           "className": "CommandImplementation",
           "docString": "<h3>CommandImplementation</h3>Derived from OldStyleCommand. It validates and applies the command. CommandImplementation::Apply() is overloaded in classes derived from it "
         },
         {
           "className": "CommandItem",
           "docString": "<h3>CommandItem</h3>No Description"
         },
         {
           "className": "CommandList",
           "docString": "<h3>CommandList</h3>List of CommandListEntry "
         },
         {
           "className": "CommandListEntry",
           "docString": "<h3>CommandListEntry</h3>CommandListEntry is a structure used by CommandManager "
         },
         {
           "className": "CommandManager",
           "docString": "<h3>CommandManager</h3>CommandManager implements a system for organizing all user-callable commands "
         },
         {
           "className": "CommandMessageTarget",
           "docString": "<h3>CommandMessageTarget</h3>Interface for objects that can receive (string) messages from a command "
         },
         {
           "className": "CommandMessageTargetDecorator",
           "docString": "<h3>CommandMessageTargetDecorator</h3>CommandMessageTargetDecorator is a CommandOutputTarget that forwards its work on to another one. Typically we derive from it to modify some functionality and forward the rest "
         },
         {
           "className": "CommandOutputTargets",
           "docString": "<h3>CommandOutputTargets</h3>CommandOutputTargets a mix of three output classes to output progress indication, status messages and errors "
         },
         {
           "className": "CommandParameters",
           "docString": "<h3>CommandParameters</h3>CommandParameters, derived from wxFileConfig, is essentially doing the same things as the Shuttle classes. It does text <-> binary conversions of parameters. It does not seem to be using actual file read/writing "
         },
         {
           "className": "CommandProgressTarget",
           "docString": "<h3>CommandProgressTarget</h3>Interface for objects that can receive command progress information "
         },
         {
           "className": "CommandSignature",
           "docString": "<h3>CommandSignature</h3>Class that maps parameter names to default values and validators "
         },
         {
           "className": "CompareAudioCommand",
           "docString": "<h3>CompareAudioCommand</h3>Returns information about the amount of audio that is about a certain threshold of difference in two selected tracks "
         },
         {
           "className": "DecoratedCommand",
           "docString": "<h3>DecoratedCommand</h3>DecoratedCommand is a decorator for command. It forwards functions to the mCommand it holds "
         },
         {
           "className": "DemoCommand",
           "docString": "<h3>DemoCommand</h3>An AudacityCommand that does nothing but provide parameters. It is for development purposes "
         },
         {
           "className": "DragCommand",
           "docString": "<h3>DragCommand</h3>Command that sets clip information "
         },
         {
           "className": "EffectClientInterface",
           "docString": "<h3>EffectClientInterface</h3>EffectClientInterface provides the ident interface to Effect, and is what makes Effect into a plug-in command. It has functions for realtime that are not part of AudacityCommand "
         },
         {
           "className": "ExportCommand",
           "docString": "<h3>ExportCommand</h3>Command for exporting audio "
         },
         {
           "className": "GetInfoCommand",
           "docString": "<h3>GetInfoCommand</h3>Command which outputs a list of available menu commands on the status channel "
         },
         {
           "className": "GetPreferenceCommand",
           "docString": "<h3>GetPreferenceCommand</h3>Command for getting the value of a preference "
         },
         {
           "className": "GetTrackInfoCommand",
           "docString": "<h3>GetTrackInfoCommand</h3>Obsolete. GetInfo now does it "
         },
         {
           "className": "HelpCommand",
           "docString": "<h3>HelpCommand</h3>Command to get help about other commands "
         },
         {
           "className": "ImportCommand",
           "docString": "<h3>ImportCommand</h3>Command for importing audio "
         },
         {
           "className": "LispifiedCommandOutputTargets",
           "docString": "<h3>LispifiedCommandOutputTargets</h3>LispifiedCommandOutputTargets is a CommandOutputTargets that replaces the status message target with the LispyCommandMessageTarget version "
         },
         {
           "className": "LispyCommandMessageTarget",
           "docString": "<h3>LispyCommandMessageTarget</h3>LispyCommandMessageTarget is a CommandOutputTarget that provides status in a lispy style "
         },
         {
           "className": "MacroCommands",
           "docString": "<h3>MacroCommands</h3>Maintains the list of commands for batch/macro processing. See also MacrosWindow and ApplyMacroDialog "
         },
         {
           "className": "MacroCommandsCatalog",
           "docString": "<h3>MacroCommandsCatalog</h3>No Description"
         },
         {
           "className": "MenuBarListEntry",
           "docString": "<h3>MenuBarListEntry</h3>MenuBarListEntry is a structure used by CommandManager "
         },
         {
           "className": "MessageCommand",
           "docString": "<h3>MessageCommand</h3>Command to get a message response. Used for testing, and used internally to create messages for forwarding "
         },
         {
           "className": "MessageCommandType",
           "docString": "<h3>MessageCommandType</h3>The <something>CommandType classes are classes which are going away. They all provided a BuildSignature (what parameters they accept) and Name, but that is now replaced by the AudacityCommand interface "
         },
         {
           "className": "MessageDialogTarget",
           "docString": "<h3>MessageDialogTarget</h3>MessageDialogTarget is a CommandOutputTarget that sends its status to the LongMessageDialog "
         },
         {
           "className": "OldStyleCommand",
           "docString": "<h3>OldStyleCommand</h3>Abstract base class for command interface. This is the version created by Dan Horgan. It was previously a factory for other command classes. It created a separation between the type of a command and the command itself, which is being removed. These Cmmands were managed by CommandDirectory "
         },
         {
           "className": "OldStyleCommandPointer",
           "docString": "<h3>OldStyleCommandPointer</h3>OldStyleCommandPointer is a unique_ptr to an OldStyleCommand "
         },
         {
           "className": "OldStyleCommandType",
           "docString": "<h3>OldStyleCommandType</h3>Base class for containing data common to all commands of a given type. Also acts as a factory "
         },
         {
           "className": "OpenProjectCommand",
           "docString": "<h3>OpenProjectCommand</h3>Command for opening an Audacity project "
         },
         {
           "className": "ReservedCommandFlag",
           "docString": "<h3>ReservedCommandFlag</h3>No Description"
         },
         {
           "className": "SaveProjectCommand",
           "docString": "<h3>SaveProjectCommand</h3>Command for saving an Audacity project "
         },
         {
           "className": "ScreenshotCommand",
           "docString": "<h3>ScreenshotCommand</h3>Implements a command for capturing various areas of the screen or project window. It's one big if-elseif switch statement with lots of small calculations of rectangles "
         },
         {
           "className": "ScriptCommandRelay",
           "docString": "<h3>ScriptCommandRelay</h3>ScriptCommandRelay is just a way to move some of the scripting-specific code out of ModuleManager "
         },
         {
           "className": "SelectCommand",
           "docString": "<h3>SelectCommand</h3>Command for changing time, frequency and track selection. This class is a little baroque, as it uses the SelectTimeCommand, SelectFrequenciesCommand and SelectTracksCommand, when it could just explicitly code all three "
         },
         {
           "className": "SelectFrequenciesCommand",
           "docString": "<h3>SelectFrequenciesCommand</h3>Command for changing the frequency selection "
         },
         {
           "className": "SelectTimeCommand",
           "docString": "<h3>SelectTimeCommand</h3>Command for changing the time selection "
         },
         {
           "className": "SelectTracksCommand",
           "docString": "<h3>SelectTracksCommand</h3>Command for changing the selection of tracks "
         },
         {
           "className": "SetClipCommand",
           "docString": "<h3>SetClipCommand</h3>Command that sets clip information "
         },
         {
           "className": "SetEnvelopeCommand",
           "docString": "<h3>SetEnvelopeCommand</h3>Command that sets envelope information "
         },
         {
           "className": "SetLabelCommand",
           "docString": "<h3>SetLabelCommand</h3>Command that sets label information "
         },
         {
           "className": "SetPreferenceCommand",
           "docString": "<h3>SetPreferenceCommand</h3>Command for setting a preference to a given value "
         },
         {
           "className": "SetProjectCommand",
           "docString": "<h3>SetProjectCommand</h3>Command that sets project information "
         },
         {
           "className": "SetTrackAudioCommand",
           "docString": "<h3>SetTrackAudioCommand</h3>A SetTrackBase that sets pan, gain, mute and solo "
         },
         {
           "className": "SetTrackBase",
           "docString": "<h3>SetTrackBase</h3>Base class for the various SetTrackCommand classes. Subclasses provide the settings that are relevant to them "
         },
         {
           "className": "SetTrackCommand",
           "docString": "<h3>SetTrackCommand</h3>A SetTrackBase that combines SetTrackStatusCommand, SetTrackAudioCommand and SetTrackVisualsCommand "
         },
         {
           "className": "SetTrackStatusCommand",
           "docString": "<h3>SetTrackStatusCommand</h3>A SetTrackBase that sets name, selected and focus "
         },
         {
           "className": "SetTrackVisualsCommand",
           "docString": "<h3>SetTrackVisualsCommand</h3>A SetTrackBase that sets appearance of a track "
         },
         {
           "className": "SubMenuListEntry",
           "docString": "<h3>SubMenuListEntry</h3>SubMenuListEntry is a structure used by CommandManager "
         },
         {
           "className": "TargetFactory",
           "docString": "<h3>TargetFactory</h3>TargetFactory makes Command output targets. By default, we ignore progress updates but display all other messages directly "
         },
         {
           "className": "Audacity Commands",
           "docString": "<h3>Audacity Commands</h3>These are the scripting commands in Audacity which are designed to be called from an external script, such as a script in python.  They are also available from the 'extra' menu.",
           "isHead": true
         }


     ]},


{"Path":"Snakes3-4",
 "values":[


            {
              "className": "EffectsPrefs",
              "docString": "<h3>EffectsPrefs</h3>A PrefsPanel for general GUI prefernces ",
              "category":"Preferences",
              "snakeStyle": 1
            },
            {
              "className": "AudacityPrefs",
              "docString": "<h3>AudacityPrefs</h3>Our own specialisation of wxFileConfig. It is essentially a renaming, though it does provide one new access function. Most of the prefs work is actually done by the InitPreferences() function "
            },
            {
              "className": "BatchPrefs",
              "docString": "<h3>BatchPrefs</h3>A probably unused PrefsPanel that in debug builds could offer a setting used in debugging batch (aka macros) processing "
            },
            {
              "className": "DevicePrefs",
              "docString": "<h3>DevicePrefs</h3>A PrefsPanel used to select recording and playback devices and other settings "
            },
            {
              "className": "DirectoriesPrefs",
              "docString": "<h3>DirectoriesPrefs</h3>A PrefsPanel used to select directories "
            },
            {
              "className": "ExtImportPrefs",
              "docString": "<h3>ExtImportPrefs</h3>A PrefsPanel used to select extended import filter options "
            },
            {
              "className": "GUIPrefs",
              "docString": "<h3>GUIPrefs</h3>A PrefsPanel for general GUI preferences "
            },
            {
              "className": "ImportExportPrefs",
              "docString": "<h3>ImportExportPrefs</h3>A PrefsPanel used to select import and export options "
            },
            {
              "className": "KeyConfigPrefs",
              "docString": "<h3>KeyConfigPrefs</h3>A PrefsPanel for keybindings "
            },
            {
              "className": "LibraryPrefs",
              "docString": "<h3>LibraryPrefs</h3>A PrefsPanel used to select manage external libraries like the MP3 and FFmpeg encoding libraries "
            },
            {
              "className": "MidiIOPrefs",
              "docString": "<h3>MidiIOPrefs</h3>A PrefsPanel used to select recording and playback devices and other settings "
            },
            {
              "className": "ModulePrefs",
              "docString": "<h3>ModulePrefs</h3>A PrefsPanel to enable/disable certain modules. 'Modules' are dynamically linked libraries that modify Audacity. They are plug-ins with names like mnod-script-pipe that add NEW features "
            },
            {
              "className": "MousePrefs",
              "docString": "<h3>MousePrefs</h3>A PrefsPanel that presents an interface for user to view the default bindings of mouse buttons to commands "
            },
            {
              "className": "PlaybackPrefs",
              "docString": "<h3>PlaybackPrefs</h3>A PrefsPanel used to select playback options "
            },
            {
              "className": "ProjectsPrefs",
              "docString": "<h3>ProjectsPrefs</h3>A PrefsPanel used to select options related to Audacity Project handling "
            },
            {
              "className": "QualityPrefs",
              "docString": "<h3>QualityPrefs</h3>A PrefsPanel used for setting audio quality "
            },
            {
              "className": "RecordingPrefs",
              "docString": "<h3>RecordingPrefs</h3>A PrefsPanel used to select recording options "
            },
            {
              "className": "ShuttlePrefs",
              "docString": "<h3>ShuttlePrefs</h3>A kind of Shuttle to exchange data with preferences e.g. the registry "
            },
            {
              "className": "SpectrumPrefs",
              "docString": "<h3>SpectrumPrefs</h3>A PrefsPanel for spectrum settings "
            },
            {
              "className": "ThemePrefs",
              "docString": "<h3>ThemePrefs</h3>A PrefsPanel that configures dynamic loading of Theme icons and colours "
            },
            {
              "className": "TracksBehaviorsPrefs",
              "docString": "<h3>TracksBehaviorsPrefs</h3>A PrefsPanel for Tracks Behaviors settings "
            },
            {
              "className": "TracksPrefs",
              "docString": "<h3>TracksPrefs</h3>A PrefsPanel for track display and behavior properties "
            },
            {
              "className": "WarningsPrefs",
              "docString": "<h3>WarningsPrefs</h3>A PrefsPanel to enable/disable certain warning messages "
            },
            {
              "className": "WaveformPrefs",
              "docString": "<h3>WaveformPrefs</h3>A PrefsPanel for spectrum settings "
            },
             {
               "className": "PrefsListener",
               "docString": "<h3>PrefsListener</h3>No Description"
             },
             {
               "className": "PrefsNode",
               "docString": "<h3>PrefsNode</h3>No Description"
             },
            {
              "className": "Prefs",
              "docString": "<h3>Prefs</h3>The Audacity Preference panels for the preference dialog that each hold a collection of related preferences",
              "isHead": true
            },

         {
           "className": "ODComputeSummaryTask",
           "docString": "<h3>ODComputeSummaryTask</h3>A class representing a modular task to be used with the On-Demand structures ",
           "category":"Blockfiles",
           "snakeStyle": 1
         },
         {
           "className": "ODCondition",
           "docString": "<h3>ODCondition</h3>No Description"
         },
         {
           "className": "ODDecodeFlacTask",
           "docString": "<h3>ODDecodeFlacTask</h3>A class representing a modular task to be used with the On-Demand structures "
         },
         {
           "className": "ODDecodeTask",
           "docString": "<h3>ODDecodeTask</h3>A class representing a modular task to be used with the On-Demand structures "
         },
         {
           "className": "ODFileDecoder",
           "docString": "<h3>ODFileDecoder</h3>Class to decode a particular file (one per file). Saves info such as filename and length (after the header is read.) "
         },
         {
           "className": "ODFlacDecoder",
           "docString": "<h3>ODFlacDecoder</h3>Class to decode a particular file (one per file). Saves info such as filename and length (after the header is read.) "
         },
         {
           "className": "ODFLACFile",
           "docString": "<h3>ODFLACFile</h3>No Description"
         },
         {
           "className": "ODLock",
           "docString": "<h3>ODLock</h3>No Description"
         },
         {
           "className": "ODLocker",
           "docString": "<h3>ODLocker</h3>No Description"
         },
         {
           "className": "ODManager",
           "docString": "<h3>ODManager</h3>A singleton that manages currently running Tasks on an arbitrary number of threads "
         },
         {
           "className": "ODManagerHelperThread",
           "docString": "<h3>ODManagerHelperThread</h3>No Description"
         },
         {
           "className": "ODTask",
           "docString": "<h3>ODTask</h3>A class representing a modular task to be used with the On-Demand structures "
         },
         {
           "className": "ODTaskThread",
           "docString": "<h3>ODTaskThread</h3>A thread that executes a part of the task specfied by an ODTask "
         },
         {
           "className": "ODUnlocker",
           "docString": "<h3>ODUnlocker</h3>No Description"
         },
         {
           "className": "ODWaveTrackTaskQueue",
           "docString": "<h3>ODWaveTrackTaskQueue</h3>A class representing a modular task to be used with the On-Demand structures "
         },
         {
           "className": "On Demand",
           "docString": "<h3>On Demand</h3>A feature to allow editing of audio before it has been fully read in.  With the OD mode enabled, stripy bars appear where the waveform has not yet been processed",
           "isHead": true
         },

         {
           "className": "RegisteredBlockFileDeserializer",
           "docString": "<h3>RegisteredBlockFileDeserializer</h3>No Description",
           "category":"Blockfiles",
           "snakeStyle": 1
         },
         {
           "className": "SeqBlock",
           "docString": "<h3>SeqBlock</h3>Data structure containing pointer to a BlockFile and a start time. Element of a BlockArray "
         },
         {
           "className": "Sequence",
           "docString": "<h3>Sequence</h3>A WaveTrack contains WaveClip(s). A WaveClip contains a Sequence. A Sequence is primarily an interface to an array of SeqBlock instances, corresponding to the audio BlockFiles on disk. Contrast with RingBuffer "
         },
         {
           "className": "ODDecodeBlockFile",
           "docString": "<h3>ODDecodeBlockFile</h3>An AliasBlockFile that references uncompressed data in an existing file "
         },
         {
           "className": "ODPCMAliasBlockFile",
           "docString": "<h3>ODPCMAliasBlockFile</h3>An AliasBlockFile that references uncompressed data in an existing file "
         },
         {
           "className": "AliasBlockFile",
           "docString": "<h3>AliasBlockFile</h3>A BlockFile that refers to data in an existing file "
         },
         {
           "className": "LegacyAliasBlockFile",
           "docString": "<h3>LegacyAliasBlockFile</h3>An AliasBlockFile that references uncompressed data in an existing file "
         },
         {
           "className": "LegacyBlockFile",
           "docString": "<h3>LegacyBlockFile</h3>Audacity 1.1.0 block file format: "
         },
         {
           "className": "PCMAliasBlockFile",
           "docString": "<h3>PCMAliasBlockFile</h3>An AliasBlockFile that references uncompressed data in an existing file "
         },
         {
           "className": "SilentBlockFile",
           "docString": "<h3>SilentBlockFile</h3>A BlockFile containing nothing but silence. Saves disk space "
         },
         {
           "className": "SimpleBlockFile",
           "docString": "<h3>SimpleBlockFile</h3>A BlockFile that reads and writes uncompressed data using libsndfile "
         },
         {
           "className": "SimpleBlockFileCache",
           "docString": "<h3>SimpleBlockFileCache</h3>No Description"
         },
         {
           "className": "SummaryInfo",
           "docString": "<h3>SummaryInfo</h3>Works with BlockFile to hold info about max and min and RMS over multiple samples, which in turn allows rapid drawing when zoomed out "
         },
         {
           "className": "auHeader",
           "docString": "<h3>auHeader</h3>The auHeader is a structure used by SimpleBlockFile for .au file format. There probably is an 'official' header file we should include to get its definition, rather than rolling our own "
         },
         {
           "className": "DirManager",
           "docString": "<h3>DirManager</h3>Creates and manages BlockFile objects "
         },
         {
           "className": "BlockFile",
           "docString": "<h3>BlockFile</h3>A BlockFile is a chunk of immutable audio data ",
           "isHead": true
         }
     ]}

     ]},


{"Path":"Snakes5-14",
 "values":[


         {
           "className": "ControlToolBar",
           "docString": "<h3>ControlToolBar</h3>A ToolBar that has the main Transport buttons ",
           "category":"Toolbars",
           "snakeStyle": 1
         },
         {
           "className": "DeviceToolBar",
           "docString": "<h3>DeviceToolBar</h3>A toobar to allow easier changing of input and output devices "
         },
         {
           "className": "EditToolBar",
           "docString": "<h3>EditToolBar</h3>A ToolBar that has the edit buttons on it "
         },
         {
           "className": "ExpandingToolBar",
           "docString": "<h3>ExpandingToolBar</h3>A smart ToolBar class that has a \"MainPanel\" which is always displayed, and an \"ExtraPanel\" that can be hidden to save space "
         },
         {
           "className": "MeterToolBar",
           "docString": "<h3>MeterToolBar</h3>A ToolBar that holds the VU Meter "
         },
         {
           "className": "MixerToolBar",
           "docString": "<h3>MixerToolBar</h3>A ToolBar that provides the record and playback volume settings "
         },
         {
           "className": "ScrubbingToolBar",
           "docString": "<h3>ScrubbingToolBar</h3>No Description"
         },
         {
           "className": "ToolBar",
           "docString": "<h3>ToolBar</h3>Works with ToolManager and ToolDock to provide a dockable window in which buttons can be placed "
         },
         {
           "className": "ToolsToolBar",
           "docString": "<h3>ToolsToolBar</h3>A kind of ToolBar with Tools on it "
         },
         {
           "className": "TranscriptionToolBar",
           "docString": "<h3>TranscriptionToolBar</h3>A kind of ToolBar used to help with analysing voice recordings "
         },
         {
           "className": "Toolbars",
           "docString": "<h3>Toolbars</h3>Toolbars are in the top or bottom dock of Audacity and provide buttons for the most commonly used functions.",
           "isHead": true
         },
         {
           "className": "ToolbarActions",
           "docString": "<h3>ToolbarActions</h3>Namespace for functions for View Toolbar menu ",
           "category":"Toolbars",
           "snakeStyle": 2
         },
         {
           "className": "ToolBarArea",
           "docString": "<h3>ToolBarArea</h3>An alterantive to ToolBarFrame which can contain an ExpandingToolBar. ToolBarArea is used for a 'docked' ToolBar, ToolBarFrame for a floating one "
         },
         {
           "className": "ToolBarArrangement",
           "docString": "<h3>ToolBarArrangement</h3>Small class that holds some layout information for an ExpandingToolBar "
         },
         {
           "className": "ToolBarConfiguration",
           "docString": "<h3>ToolBarConfiguration</h3>No Description"
         },
         {
           "className": "ToolBarFrame",
           "docString": "<h3>ToolBarFrame</h3>A miniframe based container for ExpandingToolBars providing modeless presentation "
         },
         {
           "className": "ToolBarGrabber",
           "docString": "<h3>ToolBarGrabber</h3>Draws the grabber for an ExpandingToolBar "
         },
         {
           "className": "ToolBarResizer",
           "docString": "<h3>ToolBarResizer</h3>WxWindow that provides the resizer for a toolbar on the right hand side. Responsible for drawing the resizer appearance, resizing mouse events and constraining the resizing "
         },
         {
           "className": "ToolCodes",
           "docString": "<h3>ToolCodes</h3>No Description"
         },
         {
           "className": "ToolDock",
           "docString": "<h3>ToolDock</h3>A dynamic panel where a ToolBar can be docked "
         },
         {
           "className": "ToolFrame",
           "docString": "<h3>ToolFrame</h3>Class ToolFrame "
         },
         {
           "className": "ToolManager",
           "docString": "<h3>ToolManager</h3>Class ToolManager "
         },
         {
           "className": "Toolbar Support",
           "docString": "<h3>Toolbar Support</h3>Classes that help the main Toolbar classes",
           "isHead": true
         },

         {
           "className": "Menu",
           "docString": "<h3>Menu</h3>+No Description",
           "category":"Menus",
           "snakeStyle": 2
         },
         {
           "className": "MenuBarList",
           "docString": "<h3>MenuBarList</h3>List of MenuBarListEntry "
         },
         {
           "className": "MenuButtonHandle",
           "docString": "<h3>MenuButtonHandle</h3>No Description"
         },
         {
           "className": "MenuCreator",
           "docString": "<h3>MenuCreator</h3>MenuCreator is responsible for creating the main menu bar "
         },
         {
           "className": "MenuItem",
           "docString": "<h3>MenuItem</h3>No Description"
         },
         {
           "className": "MenuItemEnabler",
           "docString": "<h3>MenuItemEnabler</h3>No Description"
         },
         {
           "className": "MenuManager",
           "docString": "<h3>MenuManager</h3>MenuManager handles updates to menu state "
         },
         {
           "className": "MenuTable",
           "docString": "<h3>MenuTable</h3>Namespace for structures that go into building a menu "
         },
         {
           "className": "Menu Classes",
           "docString": "<h3>Menu Classes</h3>We have helper classes to build the menus.  We intend that they become part of the Shuttle system",
           "isHead": true
         },

            {
              "className": "AboutDialog",
              "docString": "<h3>AboutDialog</h3>The AboutDialog shows the program version and developer credits ",
              "category":"Dialogs",
              "snakeStyle": 1
            },
            {
              "className": "ApplyMacroDialog",
              "docString": "<h3>ApplyMacroDialog</h3>Shows progress in executing commands in MacroCommands "
            },
            {
              "className": "AutoRecoveryDialog",
              "docString": "<h3>AutoRecoveryDialog</h3>The AutoRecoveryDialog prompts the user whether to recover previous Audacity projects that were closed incorrectly "
            },
            {
              "className": "BrowserDialog",
              "docString": "<h3>BrowserDialog</h3>Adds some event handling to an HtmlWindow "
            },
            {
              "className": "DependencyDialog",
              "docString": "<h3>DependencyDialog</h3>DependencyDialog shows dependencies of an AudacityProject on AliasedFiles "
            },
            {
              "className": "DemoDialog",
              "docString": "<h3>DemoDialog</h3>DemoDialog used with DemoCommand "
            },
            {
              "className": "EchoDialog",
              "docString": "<h3>EchoDialog</h3>EchoDialog used with EffectEcho "
            },
            {
              "className": "ExportMixerDialog",
              "docString": "<h3>ExportMixerDialog</h3>Dialog for advanced mixing "
            },
            {
              "className": "ExportMultipleDialog",
              "docString": "<h3>ExportMultipleDialog</h3>Presents a dialog box allowing the user to export multiple files either by exporting each track as a separate file, or by exporting each label as a separate file"
            },
            {
              "className": "FindClippingDialog",
              "docString": "<h3>FindClippingDialog</h3>FindClippingDialog used with EffectFindClipping "
            },
            {
              "className": "FindFFmpegDialog",
              "docString": "<h3>FindFFmpegDialog</h3>Allows user to locate libav* libraries "
            },
            {
              "className": "FrequencyPlotDialog",
              "docString": "<h3>FrequencyPlotDialog</h3>Displays a spectrum plot of the waveform. Has options for selecting parameters of the plot "
            },
            {
              "className": "HistoryDialog",
              "docString": "<h3>HistoryDialog</h3>Works with UndoManager to allow user to see descriptions of and undo previous commands. Also allows you to selectively clear the undo memory so as to free up space "
            },
            {
              "className": "ImportRawDialog",
              "docString": "<h3>ImportRawDialog</h3>ImportRawDialog prompts you with options such as endianness and sample size to help you importing data of an unknown format "
            },
            {
              "className": "LabelDialog",
              "docString": "<h3>LabelDialog</h3>Dialog for editing labels "
            },
            {
              "className": "LadspaEffectDialog",
              "docString": "<h3>LadspaEffectDialog</h3>Dialog used with Effect "
            },
            {
              "className": "LangChoiceDialog",
              "docString": "<h3>LangChoiceDialog</h3>A dialog used (at start up) to present the user with a choice of languages for Audacity "
            },
            {
              "className": "LongMessageDialog",
              "docString": "<h3>LongMessageDialog</h3>LongMessageDialog is a dialog with a Text Window in it to capture the more lengthy output from some commands "
            },
            {
              "className": "MacroCommandDialog",
              "docString": "<h3>MacroCommandDialog</h3>Provides a list of configurable commands for use with MacroCommands "
            },
            {
              "className": "NoiseRemovalDialog",
              "docString": "<h3>NoiseRemovalDialog</h3>Dialog used with EffectNoiseRemoval "
            },
            {
              "className": "NyquistOutputDialog",
              "docString": "<h3>NyquistOutputDialog</h3>Dialog used with NyquistEffect "
            },
            {
              "className": "PrefsDialog",
              "docString": "<h3>PrefsDialog</h3>Dialog that shows the current PrefsPanel in a tabbed divider "
            },
            {
              "className": "RepeatDialog",
              "docString": "<h3>RepeatDialog</h3>Dialog used with EffectRepeat "
            },
            {
              "className": "ScoreAlignDialog",
              "docString": "<h3>ScoreAlignDialog</h3>ScoreAlignDialog is  "
            },
            {
              "className": "ScreenshotBigDialog",
              "docString": "<h3>ScreenshotBigDialog</h3>ScreenBigDialog provides an alternative Gui for ScreenshotCommand. It adds a timer that allows a delay before taking a screenshot, provides lots of one-click buttons, options to resize the screen. It forwards the actual work of doing the commands to the ScreenshotCommand "
            },
            {
              "className": "SplashDialog",
              "docString": "<h3>SplashDialog</h3>The SplashDialog shows help information for Audacity when Audacity starts up "
            },
            {
              "className": "TimerRecordDialog",
              "docString": "<h3>TimerRecordDialog</h3>Dialog for Timer Record, i.e., timed or long recording "
            },
            {
              "className": "Single Use Dialogs",
              "docString": "<h3>Single Use Dialogs</h3>These dialogs are very specific for a purpose, and are used in just one place in Audacity.  For example, they have all the parameters for a particular effect, or configure a feature like Timer Record'",
              "isHead": true
            },
            {
              "className": "AudacityCommandDialog",
              "docString": "<h3>AudacityCommandDialog</h3>Default dialog used for commands. Is populated using ShuttleGui ",
              "category":"Dialogs",
              "snakeStyle": 2
            },
            {
              "className": "AudacityMessageDialog",
              "docString": "<h3>AudacityMessageDialog</h3>Wrap wxMessageDialog so that caption IS translatable "
            },
            {
              "className": "AudacityTextEntryDialog",
              "docString": "<h3>AudacityTextEntryDialog</h3>Wrap wxTextEntryDialog so that caption IS translatable "
            },
            {
              "className": "EffectDialog",
              "docString": "<h3>EffectDialog</h3>New (Jun-2006) base class for effects dialogs. Likely to get greater use in future "
            },
            {
              "className": "ErrorDialog",
              "docString": "<h3>ErrorDialog</h3>Gives an Error message with an option for help "
            },
            {
              "className": "FileDialog",
              "docString": "<h3>FileDialog</h3>Dialog used to present platform specific \"Save As\" dialog with custom controls "
            },
            {
              "className": "MultiDialog",
              "docString": "<h3>MultiDialog</h3>A dialog for showing lists of items, mainly used to show lists of orphaned or damaged block files. It is a good alternative to having a dialog pop up for each problem encountered, since there can be many orphans "
            },
            {
              "className": "ProgressDialog",
              "docString": "<h3>ProgressDialog</h3>ProgressDialog Class "
            },
            {
              "className": "SliderDialog",
              "docString": "<h3>SliderDialog</h3>Pop up dialog used with an LWSlider "
            },
            {
              "className": "TimeDialog",
              "docString": "<h3>TimeDialog</h3>Dialog used to request a time value "
            },
            {
              "className": "ToolBarDialog",
              "docString": "<h3>ToolBarDialog</h3>A dialog based container for ExpandingToolBars, providing modal based operations "
            },
            {
              "className": "WarningDialog",
              "docString": "<h3>WarningDialog</h3>Gives a warning message, that can be dismissed, with crucially the ability to not see similar warnings again for this session "
            },
            {
              "className": "Multi-Use Dialogs",
              "docString": "<h3>Multi-Use Dialogs</h3>These dialogs are more general purpose and each is used in several places in Audacity.  For example, they allow setting of a single value using a slider, show progress, or act as a base class to provide the shared functionality that's shared by all effects dialogs",
              "isHead": true
            },

         {
           "className": "Shuttle",
           "docString": "<h3>Shuttle</h3>Moves data from one place to another, converting it as required ",
           "category":"Dialogs",
           "snakeStyle": 2
         },
         {
           "className": "ShuttleCli",
           "docString": "<h3>ShuttleCli</h3>Derived from Shuttle, this class exchanges string parameters with a binary representation "
         },
         {
           "className": "ShuttleDefaults",
           "docString": "<h3>ShuttleDefaults</h3>Shuttle that sets parameters to their default values "
         },
         {
           "className": "ShuttleGetAutomation",
           "docString": "<h3>ShuttleGetAutomation</h3>Shuttle that gets parameter values into a string "
         },
         {
           "className": "ShuttleGetDefinition",
           "docString": "<h3>ShuttleGetDefinition</h3>Shuttle that retrieves a JSON format definition of a command's parameters "
         },
         {
           "className": "ShuttleGui",
           "docString": "<h3>ShuttleGui</h3>Derived from ShuttleGuiBase, an Audacity specific class for shuttling data to and from GUI "
         },
         {
           "className": "ShuttleGuiBase",
           "docString": "<h3>ShuttleGuiBase</h3>Base class for shuttling data to and from a GUI "
         },
         {
           "className": "ShuttleParams",
           "docString": "<h3>ShuttleParams</h3>Shuttle that deals with parameters. This is a base class with lots of virtual functions that do nothing by default "
         },
         {
           "className": "ShuttleSetAutomation",
           "docString": "<h3>ShuttleSetAutomation</h3>Shuttle that sets parameters to a value (from a string) "
         },
         {
           "className": "Shuttle",
           "docString": "<h3>Shuttle</h3>These classes take things out of and put things into dialogs",
           "isHead": true
         },
         {
           "className": "AndValidator",
           "docString": "<h3>AndValidator</h3>Parameter must pass both of the supplied validators ",
           "category":"Dialogs",
           "snakeStyle": 1
         },
         {
           "className": "BoolArrayValidator",
           "docString": "<h3>BoolArrayValidator</h3>Parameter must be char array of booleans, e.g. \"011010001\" "
         },
         {
           "className": "BoolValidator",
           "docString": "<h3>BoolValidator</h3>Parameter must be a boolean "
         },
         {
           "className": "DefaultValidator",
           "docString": "<h3>DefaultValidator</h3>No Description"
         },
         {
           "className": "DoubleValidator",
           "docString": "<h3>DoubleValidator</h3>Parameter must be a floating-point number "
         },
         {
           "className": "IntValidator",
           "docString": "<h3>IntValidator</h3>Parameter must be integral "
         },
         {
           "className": "OptionValidator",
           "docString": "<h3>OptionValidator</h3>Parameter must be one of the defined options "
         },
         {
           "className": "RangeValidator",
           "docString": "<h3>RangeValidator</h3>Parameter must lie between the two given numbers "
         },
         {
           "className": "Validator",
           "docString": "<h3>Validator</h3>A Validator is an object which checks whether a wxVariant satisfies a certain criterion. This is a base validator which allows anything ",
           "isHead": true
         },


         {
           "className": "EqualizationDialog",
           "docString": "<h3>EqualizationDialog</h3>EqualizationDialog controls a graph for         EffectEqualization. We should look at amalgamating the various graphing code, such as provided by EqualizationPanel, FreqWindow and FilterPanel",
           "category":"Dialogs",
           "snakeStyle": 1
         },
         {
           "className": "EffectAutoDuckPanel",
           "docString": "<h3>EffectAutoDuckPanel</h3>+No Description"
         },
         {
           "className": "EffectCompressorPanel",
           "docString": "<h3>EffectCompressorPanel</h3>+No Description"
         },
         {
           "className": "EffectPanel",
           "docString": "<h3>EffectPanel</h3>+No Description"
         },
         {
           "className": "EffectScienFilterPanel",
           "docString": "<h3>EffectScienFilterPanel</h3>EffectScienFilterPanel is used with EffectScienFilter and controls a graph for EffectScienFilter "
         },
         {
           "className": "TrackPanel",
           "docString": "<h3>TrackPanel</h3>Coordinates updates and operations on the main part of the screen which contains multiple tracks "
         },
         {
           "className": "ExportMixerPanel",
           "docString": "<h3>ExportMixerPanel</h3>Panel that displays mixing for advanced mixing option "
         },
         {
           "className": "AdornedRulerPanel",
           "docString": "<h3>AdornedRulerPanel</h3>This is an Audacity Specific ruler panel which additionally has border, selection markers, play marker "
         },
         {
           "className": "BackedPanel",
           "docString": "<h3>BackedPanel</h3>BackedPanel is for a panel that consists of a bitmap with something drawn over it. It supports efficient repainting when the overlays change and recreation of the bitmap when the panel size is changed "
         },
         {
           "className": "CellularPanel",
           "docString": "<h3>CellularPanel</h3>Formerly part of TrackPanel, this abstract base class has no special knowledge of Track objects and is intended for reuse with other windows "
         },
         {
           "className": "CompressorPanel",
           "docString": "<h3>CompressorPanel</h3>Panel used within the EffectCompressor for EffectCompressor "
         },
         {
           "className": "EqualizationPanel",
           "docString": "<h3>EqualizationPanel</h3>EqualizationPanel is used with EqualizationDialog and controls a graph for EffectEqualization. We should look at amalgamating the various graphing code, such as provided by FreqWindow and FilterPanel "
         },
         {
           "className": "ImageRollPanel",
           "docString": "<h3>ImageRollPanel</h3>A wxPanel which displays an ImageRoll "
         },
         {
           "className": "InvisiblePanel",
           "docString": "<h3>InvisiblePanel</h3>An InvisiblePanel is a panel which does not repaint its own background "
         },
         {
           "className": "LyricsPanel",
           "docString": "<h3>LyricsPanel</h3>LyricsPanel is a panel that paints the bouncing ball and the lyrics text "
         },
         {
           "className": "MeterPanel",
           "docString": "<h3>MeterPanel</h3>MeterPanel is a panel that paints the meter used for monitoring or playback "
         },
         {
           "className": "OverlayPanel",
           "docString": "<h3>OverlayPanel</h3>+No Description"
         },
         {
           "className": "PrefsPanel",
           "docString": "<h3>PrefsPanel</h3>Base class for a panel in the PrefsDialog. Classes derived from this class include BatchPrefs, DirectoriesPrefs, GUIPrefs, KeyConfigPrefs, MousePrefs, QualityPrefs, SpectrumPrefs and ThemePrefs "
         },
         {
           "className": "RulerPanel",
           "docString": "<h3>RulerPanel</h3>RulerPanel class allows you to work with a Ruler like any other wxWindow "
         },
         {
           "className": "Panels",
           "docString": "<h3>Panels</h3>Panels are components of a window or dialog that we draw onto.",
           "isHead": true
         },
         {
           "className": "NumberFormatter",
           "docString": "<h3>NumberFormatter</h3>+No Description",
           "category":"Dialogs",
           "snakeStyle": 2
         },
         {
           "className": "NumberScale",
           "docString": "<h3>NumberScale</h3>+No Description"
         },
         {
           "className": "NumericEditor",
           "docString": "<h3>NumericEditor</h3>WxGridCellEditor for the NumericTextCtrl "
         },
         {
           "className": "NumericField",
           "docString": "<h3>NumericField</h3>NumericField is a class used in NumericTextCtrl "
         },
         {
           "className": "NumericRenderer",
           "docString": "<h3>NumericRenderer</h3>WxGridCellRenderer for the NumericTextCtrl "
         },
         {
           "className": "NumericTextCtrl",
           "docString": "<h3>NumericTextCtrl</h3>+No Description"
         },
         {
           "className": "NumericTextCtrlAx",
           "docString": "<h3>NumericTextCtrlAx</h3>NumericTextCtrlAx gives the NumericTextCtrl Accessibility "
         },
         {
           "className": "NumericConverter",
           "docString": "<h3>NumericConverter</h3>NumericConverter provides the advanced formatting control used in the selection bar of Audacity ",
           "isHead": true
         },

         {
           "className": "BenchmarkDialog",
           "docString": "<h3>BenchmarkDialog</h3>BenchmarkDialog is used for measuring performance and accuracy of the BlockFile system ",
           "category":"Dialogs",
           "snakeStyle": 1
         },
         {
           "className": "FileDialogBase",
           "docString": "<h3>FileDialogBase</h3>+No Description"
         },
         {
           "className": "FileDialogWrapper",
           "docString": "<h3>FileDialogWrapper</h3>+No Description",
           "isHead": true
         },

         {
           "className": "Scrubber",
           "docString": "<h3>Scrubber</h3>+No Description",
           "category":"Audio",
           "snakeStyle": 1
         },
         {
           "className": "ScrubbingCell",
           "docString": "<h3>ScrubbingCell</h3>+No Description"
         },
         {
           "className": "ScrubbingHandle",
           "docString": "<h3>ScrubbingHandle</h3>+No Description"
         },
         {
           "className": "ScrubbingOptions",
           "docString": "<h3>ScrubbingOptions</h3>+No Description"
         },
         {
           "className": "ScrubbingOverlay",
           "docString": "<h3>ScrubbingOverlay</h3>+No Description"
         },
         {
           "className": "ScrubForwarder",
           "docString": "<h3>ScrubForwarder</h3>+No Description"
         },
         {
           "className": "ScrubPoller",
           "docString": "<h3>ScrubPoller</h3>+No Description"
         },
         {
           "className": "ScrubPollerThread",
           "docString": "<h3>ScrubPollerThread</h3>+No Description"
         },
         {
           "className": "ScrubState",
           "docString": "<h3>ScrubState</h3>+No Description"
         },
         {
           "className": "Scrubbing",
           "docString": "<h3>Scrubbing</h3>Classes for Scrubbing.  All undocumented",
           "isHead": true
         },

         {
           "className": "ProjectAudioIO",
           "docString": "<h3>ProjectAudioIO</h3>+No Description",
           "category":"Audio",
           "snakeStyle": 1
         },
         {
           "className": "ProjectAudioManager",
           "docString": "<h3>ProjectAudioManager</h3>+No Description"
         },

         {
           "className": "AudioIO",
           "docString": "<h3>AudioIO</h3>AudioIO uses the PortAudio library to play and record sound "
         },
         {
           "className": "AudioIOBase",
           "docString": "<h3>AudioIOBase</h3>A singleton object supporting queries of the state of any active audio streams, and audio device capabilities "
         },
         {
           "className": "AudioIoCallback",
           "docString": "<h3>AudioIoCallback</h3>AudioIoCallback is a class that implements the callback required by PortAudio. The callback needs to be responsive, has no GUI, and copies data into and out of the sound card buffers. It also sends data to the meters "
         },
         {
           "className": "AudioIOListener",
           "docString": "<h3>AudioIOListener</h3>Monitors record play start/stop and new blockfiles. Has callbacks for these events "
         },
         {
           "className": "AudioIOStartStreamOptions",
           "docString": "<h3>AudioIOStartStreamOptions</h3>Struct holding stream options, including a pointer to the time warp info and AudioIOListener and whether the playback is looped "
         },
         {
           "className": "AudioThread",
           "docString": "<h3>AudioThread</h3>Defined different on Mac and other platforms (on Mac it does not use wxWidgets wxThread), this class sits in a thread loop reading and writing audio "
         },
         {
           "className": "AudioTrack",
           "docString": "<h3>AudioTrack</h3>A Track that can load/save audio data to/from XML "
         },
         {
           "className": "Audio",
           "docString": "<h3>Audio</h3>Classes that deal with the portaudio thread",
           "isHead": true
         }

]},




{
"sizeAs":2,

"Path":"Snakes9-12",
 "values":[












         {
           "className": "AudacityException",
           "docString": "<h3>AudacityException</h3>Root of a hierarchy of classes that are thrown and caught by Audacity ",
           "category":"Scaffolding",
           "snakeStyle": 2
         },
         {
           "className": "BadFormatException",
           "docString": "<h3>BadFormatException</h3>+No Description"
         },
         {
           "className": "FileException",
           "docString": "<h3>FileException</h3>+No Description"
         },
         {
           "className": "InconsistencyException",
           "docString": "<h3>InconsistencyException</h3>+No Description"
         },
         {
           "className": "MessageBoxException",
           "docString": "<h3>MessageBoxException</h3>A subclass of AudacityException whose delayed handler action displays a message box. The message is specified by further subclasses. Not more than one message box will be displayed for each pass through the main event idle loop "
         },
         {
           "className": "NotYetAvailableException",
           "docString": "<h3>NotYetAvailableException</h3>+No Description"
         },
         {
           "className": "SimpleMessageBoxException",
           "docString": "<h3>SimpleMessageBoxException</h3>A MessageBoxException that shows a given, unvarying string "
         },
         {
           "className": "UserException",
           "docString": "<h3>UserException</h3>+No Description"
         },
         {
           "className": "Exceptions",
           "docString": "<h3>Exceptions</h3>For unexpected events such as file not found or not writable.",
           "isHead": true
         },
         {
           "className": "AButton",
           "docString": "<h3>AButton</h3>A wxButton with mouse-over behaviour ",
           "category":"Scaffolding",
           "snakeStyle": 1
         },
         {
           "className": "AColor",
           "docString": "<h3>AColor</h3>AColor Manages color brushes and pens "
         },
         {
           "className": "ASlider",
           "docString": "<h3>ASlider</h3>ASlider is a custom slider, allowing for a slicker look and feel "
         },
         {
           "className": "AStaticBitmap",
           "docString": "<h3>AStaticBitmap</h3>A widget for bitmaps which ignores the erase event for flicker-free use "
         },
         {
           "className": "auStaticText",
           "docString": "<h3>auStaticText</h3>Like wxStaticText, except it can be themed. wxStaticText can't be ",
           "isHead": true
         },
         {
           "className": "Matrix",
           "docString": "<h3>Matrix</h3>Holds a matrix of doubles and supports arithmetic, subsetting, and matrix inversion. Used by InterpolateAudio ",
           "category":"Scaffolding",
           "snakeStyle": 1
         },
         {
           "className": "Biquad",
           "docString": "<h3>Biquad</h3>Represents a biquad digital filter "
         },
         {
           "className": "Vector",
           "docString": "<h3>Vector</h3>Holds a matrix of doubles and supports arithmetic operations, including Vector-Matrix operations. Used by InterpolateAudio ",
           "isHead": true
         },
         {
           "className": "AudacityTimer",
           "docString": "<h3>AudacityTimer</h3>Timer class dedicated to informing the TrackPanel that it is time to refresh some aspect of the screen ",
           "category":"Scaffolding",
           "snakeStyle": 1
         },
         {
           "className": "AudacityApp",
           "docString": "<h3>AudacityApp</h3>AudacityApp is the 'main' class for Audacity "
         },
         {
           "className": "AudacityLogger",
           "docString": "<h3>AudacityLogger</h3>AudacityLogger is a thread-safe logger class "
         },
         {
           "className": "AudacityPrintout",
           "docString": "<h3>AudacityPrintout</h3>Derived from wxPrintout, this class helps with printing "
         },
         {
           "className": "Audacity Customizations",
           "docString": "<h3>Audacity Customizations</h3>Customizations of Library classes"
         },
         {
           "className": "ArrayOf",
           "docString": "<h3>ArrayOf</h3>This simplifies arrays of arrays, each array separately allocated with NEW[] But it might be better to use std::Array<ArrayOf<X>, N> for some small constant N Or use just one array when sub-arrays have a common size and are not large "
         },
         {
           "className": "ArraysOf",
           "docString": "<h3>ArraysOf</h3>Memory.h template class for making an array of arrays "
         },
         {
           "className": "Maybe",
           "docString": "<h3>Maybe</h3>Like a smart pointer, allows for object to not exist (nullptr) "
         },
         {
           "className": "Missing in wx",
           "docString": "<h3>Missing in wx</h3>Our own extensions to wxWidgets and std::",
           "isHead": true
         },
         {
           "className": "wxArrayStringEx",
           "docString": "<h3>wxArrayStringEx</h3>+No Description",
           "category":"Scaffolding",
           "snakeStyle": 1
         },
         {
           "className": "wxFrameEx",
           "docString": "<h3>wxFrameEx</h3>+No Description"
         },
         {
           "className": "wxGtkString",
           "docString": "<h3>wxGtkString</h3>+No Description"
         },
         {
           "className": "wxOPENFILENAME",
           "docString": "<h3>wxOPENFILENAME</h3>+No Description"
         },
         {
           "className": "wxPizza",
           "docString": "<h3>wxPizza</h3>+No Description"
         },
         {
           "className": "wxTabTraversalWrapper",
           "docString": "<h3>wxTabTraversalWrapper</h3>+No Description"
         },
         {
           "className": "wxTreebook",
           "docString": "<h3>wxTreebook</h3>A wxTreebook is a class like wxNotebook, but not yet supported by wxWidgets 2.6.3 "
         },
         {
           "className": "wxTreebookItemData",
           "docString": "<h3>wxTreebookItemData</h3>One item in a wxTreebook. (I think) "
         },
         {
           "className": "wxDialogWrapper",
           "docString": "<h3>wxDialogWrapper</h3>+No Description"
         },
         {
           "className": "wxDirDialogWrapper",
           "docString": "<h3>wxDirDialogWrapper</h3>+No Description"
         },
         {
           "className": "wxFileNameWrapper",
           "docString": "<h3>wxFileNameWrapper</h3>+No Description"
         },
         {
           "className": "wxPanelWrapper",
           "docString": "<h3>wxPanelWrapper</h3>+No Description"
         },
         {
           "className": "wx Thing",
           "docString": "<h3>wx Thing</h3>Our wrappers and variants of wxWidgets components",
           "isHead": true
         },
         {
           "className": "XMLFileReader",
           "docString": "<h3>XMLFileReader</h3>Reads a file and passes the results through an XMLTagHandler ",
           "category":"Scaffolding",
           "snakeStyle": 1
         },
         {
           "className": "XMLFileWriter",
           "docString": "<h3>XMLFileWriter</h3>Wrapper to output XML data to files "
         },
         {
           "className": "XMLStringWriter",
           "docString": "<h3>XMLStringWriter</h3>Wrapper to output XML data to strings "
         },
         {
           "className": "XMLTagHandler",
           "docString": "<h3>XMLTagHandler</h3>This class is an interface which should be implemented by classes which wish to be able to load and save themselves using XML files "
         },
         {
           "className": "XMLValueChecker",
           "docString": "<h3>XMLValueChecker</h3>XMLValueChecker implements static bool methods for checking input values from XML files "
         },
         {
           "className": "XMLWriter",
           "docString": "<h3>XMLWriter</h3>Base class for XMLFileWriter and XMLStringWriter that provides the general functionality for creating XML in UTF8 encoding "
         },
         {
           "className": "XML",
           "docString": "<h3>XML</h3>Stuff for XML.  The .aup file is an XML file, and this stuff is responsible for reading and wriitng it.",
           "isHead": true
         },

         {
           "className": "AllProjects",
           "docString": "<h3>AllProjects</h3>Object of class AllProjects acts like a standard library container, but refers to a global array of open projects. So you can iterate easily over shared pointers to them with range-for : for (auto pProject : AllProjects{}) { ... } The pointers are never null ",
           "category":"Scaffolding",
           "snakeStyle": 1
         },
         {
           "className": "AllClipsConstIterator",
           "docString": "<h3>AllClipsConstIterator</h3>+No Description"
         },
         {
           "className": "AllClipsIterator",
           "docString": "<h3>AllClipsIterator</h3>+No Description",
           "isHead": true
         },

         {
           "className": "MixerBoardFrame",
           "docString": "<h3>MixerBoardFrame</h3>+No Description",
           "category":"Plugins",
           "snakeStyle": 1
         },
         {
           "className": "MixerBoardScrolledWindow",
           "docString": "<h3>MixerBoardScrolledWindow</h3>+No Description"
         },
         {
           "className": "MixerTrackCluster",
           "docString": "<h3>MixerTrackCluster</h3>+No Description"
         },
         {
           "className": "MixerTrackSlider",
           "docString": "<h3>MixerTrackSlider</h3>+No Description"
         },
         {
           "className": "MixerBoard",
           "docString": "<h3>MixerBoard</h3>+No Description",
           "isHead": true
         },

         {
           "className": "AV_Deleter",
           "docString": "<h3>AV_Deleter</h3>AV_Deleter is part of FFmpeg support. It's used with the RAII idiom ",
           "category":"Plugins",
           "snakeStyle": 1
         },
         {
           "className": "AV_Deleter< T, void, Fn >",
           "docString": "<h3>AV_Deleter< T, void, Fn ></h3>+No Description"
         },
         {
           "className": "AV_Deleterp",
           "docString": "<h3>AV_Deleterp</h3>+No Description"
         },
         {
           "className": "AVPacketEx",
           "docString": "<h3>AVPacketEx</h3>+No Description"
         },
         {
           "className": "FFmpegContext",
           "docString": "<h3>FFmpegContext</h3>+No Description"
         },
         {
           "className": "FFmpegImportFileHandle",
           "docString": "<h3>FFmpegImportFileHandle</h3>! Does acual import, returned by FFmpegImportPlugin::Open "
         },
         {
           "className": "FFmpegLibs",
           "docString": "<h3>FFmpegLibs</h3>Class used to dynamically load FFmpeg libraries "
         },
         {
           "className": "FFmpegPreset",
           "docString": "<h3>FFmpegPreset</h3>+No Description"
         },
         {
           "className": "FFmpegPresets",
           "docString": "<h3>FFmpegPresets</h3>+No Description",
           "isHead": true
         },

         {
           "className": "ExportPlugin",
           "docString": "<h3>ExportPlugin</h3>+No Description",
           "category":"Plugins",
           "snakeStyle": 1
         },
         {
           "className": "FFmpegImportPlugin",
           "docString": "<h3>FFmpegImportPlugin</h3>An ImportPlugin for FFmpeg data "
         },
         {
           "className": "FLACImportPlugin",
           "docString": "<h3>FLACImportPlugin</h3>An ImportPlugin for FLAC data "
         },
         {
           "className": "GStreamerImportPlugin",
           "docString": "<h3>GStreamerImportPlugin</h3>An ImportPlugin for GStreamer data "
         },
         {
           "className": "ImportPlugin",
           "docString": "<h3>ImportPlugin</h3>Base class for FlacImportPlugin, LOFImportPlugin, MP3ImportPlugin, OggImportPlugin and PCMImportPlugin. Gives API for sound file import "
         },
         {
           "className": "LOFImportPlugin",
           "docString": "<h3>LOFImportPlugin</h3>An ImportPlugin for LOF data "
         },
         {
           "className": "MP3ImportPlugin",
           "docString": "<h3>MP3ImportPlugin</h3>An ImportPlugin for MP3 data "
         },
         {
           "className": "OGGImportPlugin",
           "docString": "<h3>OGGImportPlugin</h3>An ImportPlugin for OGG data "
         },
         {
           "className": "PCMImportPlugin",
           "docString": "<h3>PCMImportPlugin</h3>An ImportPlugin for PCM data "
         },
         {
           "className": "RegisteredImportPlugin",
           "docString": "<h3>RegisteredImportPlugin</h3>No Description"
         },
         {
           "className": "RegisteredUnusableImportPlugin",
           "docString": "<h3>RegisteredUnusableImportPlugin</h3>No Description"
         },
         {
           "className": "UnusableImportPlugin",
           "docString": "<h3>UnusableImportPlugin</h3>Used in place of a real plug in for plug ins that have not been compiled or are not available in this version of Audacity. Has enough information to identify the file extensions that would be used, but little else "
         },
         {
           "className": "Plugins",
           "docString": "<h3>Plugins</h3>For extending Audacity, e.g. for imports, exports and effects, often with third party code rather than our own",
           "isHead": true
         },





















         {
           "className": "SpecCache",
           "docString": "<h3>SpecCache</h3>+No Description",
           "category":"Effects",
           "snakeStyle": 1
         },
         {
           "className": "SpecPowerCalculation",
           "docString": "<h3>SpecPowerCalculation</h3>SpecPowerCalculation is a simple spectral power level meter "
         },
         {
           "className": "SpecPxCache",
           "docString": "<h3>SpecPxCache</h3>+No Description"
         },
         {
           "className": "SpectralSelectionBar",
           "docString": "<h3>SpectralSelectionBar</h3>(not quite a Toolbar) at foot of screen for setting and viewing the frequency selection range "
         },
         {
           "className": "SpectralSelectionBarListener",
           "docString": "<h3>SpectralSelectionBarListener</h3>A class used to forward events to do with changes in the SpectralSelectionBar "
         },
         {
           "className": "SpectrogramSettings",
           "docString": "<h3>SpectrogramSettings</h3>Spectrogram settings, either for one track or as defaults "
         },
         {
           "className": "SpectrumAnalyst",
           "docString": "<h3>SpectrumAnalyst</h3>Used for finding the peaks, for snapping to peaks "
         },
         {
           "className": "SpectrumView",
           "docString": "<h3>SpectrumView</h3>+No Description"
         },
         {
           "className": "SpectrumVRulerControls",
           "docString": "<h3>SpectrumVRulerControls</h3>+No Description"
         },
         {
           "className": "SpectrumVRulerMenuTable",
           "docString": "<h3>SpectrumVRulerMenuTable</h3>+No Description"
         },
         {
           "className": "SpectrumVZoomHandle",
           "docString": "<h3>SpectrumVZoomHandle</h3>+No Description",
           "isHead": true
         },


            {
              "className": "EffectAmplify",
              "docString": "<h3>EffectAmplify</h3>An Effect that makes a sound louder or softer ",
              "category":"Effects",
              "snakeStyle": 2
            },
            {
              "className": "EffectAutoDuck",
              "docString": "<h3>EffectAutoDuck</h3>Implements the Auto Ducking effect "
            },
            {
              "className": "EffectBassTreble",
              "docString": "<h3>EffectBassTreble</h3>A high shelf and low shelf filter "
            },
            {
              "className": "EffectBassTrebleState",
              "docString": "<h3>EffectBassTrebleState</h3>No Description"
            },
            {
              "className": "EffectChangeSpeed",
              "docString": "<h3>EffectChangeSpeed</h3>An Effect that affects both pitch & speed "
            },
            {
              "className": "EffectChangeTempo",
              "docString": "<h3>EffectChangeTempo</h3>An EffectSoundTouch provides speeding up or slowing down tempo without changing pitch "
            },
            {
              "className": "EffectClickRemoval",
              "docString": "<h3>EffectClickRemoval</h3>An Effect for removing clicks "
            },
            {
              "className": "EffectClientInterface",
              "docString": "<h3>EffectClientInterface</h3>EffectClientInterface provides the ident interface to Effect, and is what makes Effect into a plug-in command. It has functions for realtime that are not part of AudacityCommand "
            },
            {
              "className": "EffectCompressor",
              "docString": "<h3>EffectCompressor</h3>An Effect derived from EffectTwoPassSimpleMono "
            },
            {
              "className": "EffectDistortion",
              "docString": "<h3>EffectDistortion</h3>A WaveShaper distortion effect "
            },
            {
              "className": "EffectDistortionState",
              "docString": "<h3>EffectDistortionState</h3>No Description"
            },
            {
              "className": "EffectDtmf",
              "docString": "<h3>EffectDtmf</h3>An effect that generates DTMF tones "
            },
            {
              "className": "EffectEcho",
              "docString": "<h3>EffectEcho</h3>An Effect that causes an echo, variable delay and volume "
            },
            {
              "className": "EffectEqualization",
              "docString": "<h3>EffectEqualization</h3>An Effect that modifies volume in different frequency bands "
            },
            {
              "className": "EffectFade",
              "docString": "<h3>EffectFade</h3>An Effect that reduces the volume to zero over achosen interval "
            },
            {
              "className": "EffectFindClipping",
              "docString": "<h3>EffectFindClipping</h3>Locates clipping and inserts labels when found "
            },
            {
              "className": "EffectInvert",
              "docString": "<h3>EffectInvert</h3>An Effect that inverts the selected audio "
            },
            {
              "className": "EffectLeveller",
              "docString": "<h3>EffectLeveller</h3>An Effect that aims to selectively make softer sounds louder "
            },
            {
              "className": "EffectNoise",
              "docString": "<h3>EffectNoise</h3>An effect to add white noise "
            },
            {
              "className": "EffectNoiseReduction",
              "docString": "<h3>EffectNoiseReduction</h3>A two-pass effect to reduce background noise "
            },
            {
              "className": "Dialog",
              "docString": "<h3>Dialog</h3>Dialog used with EffectNoiseReduction "
            },
            {
              "className": "EffectNoiseRemoval",
              "docString": "<h3>EffectNoiseRemoval</h3>A two-pass effect to remove background noise "
            },
            {
              "className": "EffectNormalize",
              "docString": "<h3>EffectNormalize</h3>An Effect to bring the peak level up to a chosen level "
            },
            {
              "className": "EffectPaulstretch",
              "docString": "<h3>EffectPaulstretch</h3>An Extreme Time Stretch and Time Smear effect "
            },
            {
              "className": "EffectPhaser",
              "docString": "<h3>EffectPhaser</h3>An Effect that changes frequencies in a time varying manner "
            },
            {
              "className": "EffectPhaserState",
              "docString": "<h3>EffectPhaserState</h3>No Description"
            },
            {
              "className": "EffectPresetsDialog",
              "docString": "<h3>EffectPresetsDialog</h3>No Description"
            },
            {
              "className": "EffectRepair",
              "docString": "<h3>EffectRepair</h3>Use the interpolation code to fill in damaged audio. Damage can include pops, clicks, or clipping. As long as the damaged section is short and surrounded by lots of good audio, it is usually quite successful "
            },
            {
              "className": "EffectRepeat",
              "docString": "<h3>EffectRepeat</h3>An Effect that repeats audio several times over "
            },
            {
              "className": "EffectReverb",
              "docString": "<h3>EffectReverb</h3>A reverberation effect "
            },
            {
              "className": "EffectReverse",
              "docString": "<h3>EffectReverse</h3>An Effect that reverses the selected audio "
            },
            {
              "className": "EffectSBSMS",
              "docString": "<h3>EffectSBSMS</h3>No Description"
            },
            {
              "className": "EffectScienFilter",
              "docString": "<h3>EffectScienFilter</h3>An Effect that applies 'classical' IIR filters "
            },
            {
              "className": "EffectSilence",
              "docString": "<h3>EffectSilence</h3>An effect to add silence "
            },
            {
              "className": "EffectSimpleMono",
              "docString": "<h3>EffectSimpleMono</h3>An abstract Effect class that simplifies the implementation of a basic monaural effect. Inherit from it if your effect just modifies a single track in place and doesn't care how many samples it gets at a time "
            },
            {
              "className": "EffectStereoToMono",
              "docString": "<h3>EffectStereoToMono</h3>An Effect to convert stereo to mono "
            },
            {
              "className": "EffectTimeScale",
              "docString": "<h3>EffectTimeScale</h3>An EffectTimeScale does high quality sliding time scaling/pitch shifting "
            },
            {
              "className": "EffectToneGen",
              "docString": "<h3>EffectToneGen</h3>An Effect that can generate a sine, square or sawtooth wave. An extended mode of EffectToneGen supports 'chirps' where the frequency changes smoothly during the tone "
            },
            {
              "className": "EffectTruncSilence",
              "docString": "<h3>EffectTruncSilence</h3>Truncate Silence automatically reduces the length of passages where the volume is below a set threshold level "
            },
            {
              "className": "EffectTwoPassSimpleMono",
              "docString": "<h3>EffectTwoPassSimpleMono</h3>An Effect base class that implements a two pass process by using EffectSimpleMono "
            },
            {
              "className": "EffectUIClientInterface",
              "docString": "<h3>EffectUIClientInterface</h3>EffectUIClientInterface is an abstract base class to populate a UI and validate UI values. It can import and export presets "
            },
            {
              "className": "EffectUIHost",
              "docString": "<h3>EffectUIHost</h3>No Description"
            },
            {
              "className": "EffectUIHostInterface",
              "docString": "<h3>EffectUIHostInterface</h3>EffectUIHostInterface has nothing in it. It is provided so that an Effect can call SetHostUI passing in a pointer to an EffectUIHostInterface. It contains no functionality and is provided, apparently, for type checking. Since only EffectUIHost uses it, EffectUIHost could be used instead "
            },
            {
              "className": "EffectWahwah",
              "docString": "<h3>EffectWahwah</h3>An Effect that adds a 'spectral glide' "
            },
            {
              "className": "Audio Effects",
              "docString": "<h3>Audio Effects</h3>These are the built in effects of Audacity.  Apart from the simplest effects, each has a dialog to adjust its parameters. Some effects that you might expect to be in this list like 'Fade In' are provided by Nyquist, so they don't have their own dedicated effects class and are handled by the Nyquist code",
              "isHead": true
            },
         {
           "className": "VSTControl",
           "docString": "<h3>VSTControl</h3>+No Description",
           "category":"Effects",
           "snakeStyle": 2
         },
         {
           "className": "VSTControlBase",
           "docString": "<h3>VSTControlBase</h3>+No Description"
         },
         {
           "className": "VSTControlImpl",
           "docString": "<h3>VSTControlImpl</h3>+No Description"
         },
         {
           "className": "VSTEffectLink",
           "docString": "<h3>VSTEffectLink</h3>+No Description"
         },
         {
           "className": "VSTEffectsModule",
           "docString": "<h3>VSTEffectsModule</h3>+No Description"
         },
         {
           "className": "VSTEffectTimer",
           "docString": "<h3>VSTEffectTimer</h3>+No Description"
         },
         {
           "className": "VstEvent",
           "docString": "<h3>VstEvent</h3>+No Description"
         },
         {
           "className": "VstEvents",
           "docString": "<h3>VstEvents</h3>+No Description"
         },
         {
           "className": "VstMidiEvent",
           "docString": "<h3>VstMidiEvent</h3>+No Description"
         },
         {
           "className": "VstParameterProperties",
           "docString": "<h3>VstParameterProperties</h3>+No Description"
         },
         {
           "className": "VstPatchChunkInfo",
           "docString": "<h3>VstPatchChunkInfo</h3>+No Description"
         },
         {
           "className": "VstRect",
           "docString": "<h3>VstRect</h3>+No Description"
         },
         {
           "className": "VSTSubEntry",
           "docString": "<h3>VSTSubEntry</h3>+No Description"
         },
         {
           "className": "VSTSubProcess",
           "docString": "<h3>VSTSubProcess</h3>+No Description"
         },
         {
           "className": "VstTimeInfo",
           "docString": "<h3>VstTimeInfo</h3>+No Description"
         },
         {
           "className": "AEffect",
           "docString": "<h3>AEffect</h3>VST Effects class, conforming to VST layout "
         },
         {
           "className": "VST Effect",
           "docString": "<h3>VST Effect</h3>A plug in effect type",
           "isHead": true
         },
         {
           "className": "LadspaEffectMeter",
           "docString": "<h3>LadspaEffectMeter</h3>+No Description",
           "category":"Effects",
           "snakeStyle": 2
         },
         {
           "className": "LadspaEffectsModule",
           "docString": "<h3>LadspaEffectsModule</h3>+No Description"
         },
         {
           "className": "_LADSPA_Descriptor",
           "docString": "<h3>_LADSPA_Descriptor</h3>_LADSPA_Descriptor is a structure that provides the API to a LADSPA (Linux Audio Plugin Architecture) Effect "
         },
         {
           "className": "_LADSPA_PortRangeHint",
           "docString": "<h3>_LADSPA_PortRangeHint</h3>_LADSPA_PortRangeHint is a structure that gives parameter validation information for a LADSPA (Linux Audio Plugin Architecture) plug in effect "
         },
         {
           "className": "LadspaEffect",
           "docString": "<h3>LadspaEffect</h3>An effect that calls up a LADSPA plug in, i.e. many possible effects from this one class ",
           "isHead": true
         },
         {
           "className": "LV2EffectMeter",
           "docString": "<h3>LV2EffectMeter</h3>+No Description",
           "category":"Effects",
           "snakeStyle": 2
         },
         {
           "className": "LV2EffectsModule",
           "docString": "<h3>LV2EffectsModule</h3>+No Description"
         },
         {
           "className": "LV2Port",
           "docString": "<h3>LV2Port</h3>+No Description"
         },
         {
           "className": "LV2Effect",
           "docString": "<h3>LV2Effect</h3>A plug in effect.  Successor to LADSPA",
           "isHead": true
         },
         {
           "className": "Audio Units",
           "docString": "<h3>Audio Units</h3>A plug in effect subsystem on macOS",
           "category":"Effects",
           "snakeStyle": 2
         },
         {
           "className": "AudioUnitEffectsModule",
           "docString": "<h3>AudioUnitEffectsModule</h3>No Description"
         },
         {
           "className": "AudioUnitParameterInfoEx",
           "docString": "<h3>AudioUnitParameterInfoEx</h3>No Description"
         },
         {
           "className": "AudioUnitEffect",
           "docString": "<h3>AudioUnitEffect</h3>An effect class that handles a wide range of effects on macOS",
           "isHead": true
         },
         {
           "className": "EQCurve",
           "docString": "<h3>EQCurve</h3>EQCurve is used with EffectEqualization ",
           "category":"Tracks",
           "snakeStyle": 1
         },
         {
           "className": "EQPoint",
           "docString": "<h3>EQPoint</h3>EQPoint is used with EQCurve and hence EffectEqualization "
         },
         {
           "className": "EnvelopeEditor",
           "docString": "<h3>EnvelopeEditor</h3>+No Description"
         },
         {
           "className": "EnvelopeHandle",
           "docString": "<h3>EnvelopeHandle</h3>+No Description"
         },
         {
           "className": "EnvPoint",
           "docString": "<h3>EnvPoint</h3>EnvPoint, derived from XMLTagHandler, provides Envelope with a draggable point type "
         },
         {
           "className": "Envelope",
           "docString": "<h3>Envelope</h3>Piecewise linear or piecewise exponential function from double to double ",
           "isHead": true
         },


         {
           "className": "TrackActions",
           "docString": "<h3>TrackActions</h3>xNo Description",
           "category":"Tracks",
           "snakeStyle": 2
         },
         {
           "className": "TrackArt",
           "docString": "<h3>TrackArt</h3>xNo Description"
         },
         {
           "className": "TrackInfo",
           "docString": "<h3>TrackInfo</h3>Functions for drawing the track control panel, which is shown to the side of a track It has the menus, pan and gain controls displayed in it. So \"Info\" is somewhat a misnomer. Should possibly be \"TrackControls\" "
         },
         {
           "className": "TrackTyper",
           "docString": "<h3>TrackTyper</h3>Metaprogramming in TrackTyper lets track_cast work even when the track subclasses are visible only as incomplete types "
         },
         {
           "className": "TrackUtilities",
           "docString": "<h3>TrackUtilities</h3>xNo Description"
         },
         {
           "className": "Track",
           "docString": "<h3>Track</h3>Fundamental data object of Audacity, placed in the TrackPanel. Classes derived form it include the WaveTrack, NoteTrack, LabelTrack and TimeTrack "
         },
         {
           "className": "TrackArtist",
           "docString": "<h3>TrackArtist</h3>This class handles the actual rendering of WaveTracks (both waveforms and spectra), NoteTracks, LabelTracks and TimeTracks "
         },
         {
           "className": "TrackClip",
           "docString": "<h3>TrackClip</h3>xNo Description"
         },
         {
           "className": "TrackClipArray",
           "docString": "<h3>TrackClipArray</h3>xNo Description"
         },
         {
           "className": "TrackControls",
           "docString": "<h3>TrackControls</h3>xNo Description"
         },
         {
           "className": "TrackFactory",
           "docString": "<h3>TrackFactory</h3>Used to create a WaveTrack, or a LabelTrack.. Implementation of the functions of this class are dispersed through the different Track classes "
         },
         {
           "className": "TrackFocus",
           "docString": "<h3>TrackFocus</h3>xNo Description"
         },
         {
           "className": "TrackId",
           "docString": "<h3>TrackId</h3>xNo Description"
         },
         {
           "className": "TrackIter",
           "docString": "<h3>TrackIter</h3>xNo Description"
         },
         {
           "className": "TrackIterRange",
           "docString": "<h3>TrackIterRange</h3>xNo Description"
         },
         {
           "className": "TrackList",
           "docString": "<h3>TrackList</h3>TrackList is a flat linked list of tracks supporting Add, Remove, Clear, and Contains, plus serialization of the list of tracks "
         },
         {
           "className": "TrackListEvent",
           "docString": "<h3>TrackListEvent</h3>xNo Description"
         },
         {
           "className": "TrackMenuTable",
           "docString": "<h3>TrackMenuTable</h3>xNo Description"
         },
         {
           "className": "TrackPanelAx",
           "docString": "<h3>TrackPanelAx</h3>Helper to TrackPanel to give accessibility "
         },
         {
           "className": "TrackPanelCell",
           "docString": "<h3>TrackPanelCell</h3>xNo Description"
         },
         {
           "className": "TrackPanelDrawable",
           "docString": "<h3>TrackPanelDrawable</h3>Drawing interface common to cells, groups of cells, and temporary handles in CellularPanel "
         },
         {
           "className": "TrackPanelDrawingContext",
           "docString": "<h3>TrackPanelDrawingContext</h3>xNo Description"
         },
         {
           "className": "TrackPanelGroup",
           "docString": "<h3>TrackPanelGroup</h3>xNo Description"
         },
         {
           "className": "TrackPanelListener",
           "docString": "<h3>TrackPanelListener</h3>xNo Description"
         },
         {
           "className": "TrackPanelMouseEvent",
           "docString": "<h3>TrackPanelMouseEvent</h3>xNo Description"
         },
         {
           "className": "TrackPanelMouseState",
           "docString": "<h3>TrackPanelMouseState</h3>xNo Description"
         },
         {
           "className": "TrackPanelNode",
           "docString": "<h3>TrackPanelNode</h3>The TrackPanel is built up of nodes, subtrees of the CellularPanel's area Common base class for TrackPanelCell (leaf) and TrackPanelGroup (nonleaf) "
         },
         {
           "className": "TrackPanelResizeHandle",
           "docString": "<h3>TrackPanelResizeHandle</h3>xNo Description"
         },
         {
           "className": "TrackPanelResizerCell",
           "docString": "<h3>TrackPanelResizerCell</h3>xNo Description"
         },
         {
           "className": "TrackSelectHandle",
           "docString": "<h3>TrackSelectHandle</h3>xNo Description"
         },
         {
           "className": "TracksViewModeSetting",
           "docString": "<h3>TracksViewModeSetting</h3>xNo Description"
         },
         {
           "className": "TrackView",
           "docString": "<h3>TrackView</h3>xNo Description"
         },
         {
           "className": "TrackVRulerControls",
           "docString": "<h3>TrackVRulerControls</h3>xNo Description"
         },
         {
           "className": "Track Classes",
           "docString": "<h3>Track Classes</h3>Many classes related to drawing and iterating through tracks.  These are recent work and very few of them are documented.",
           "isHead": true
         },
         {
           "className": "Label",
           "docString": "<h3>Label</h3>An array of these created by the Ruler is used to determine what and where text annotations to the numbers on the Ruler get drawn ",
           "category":"Tracks",
           "snakeStyle": 2
         },
         {
           "className": "LabelDefaultClickHandle",
           "docString": "<h3>LabelDefaultClickHandle</h3>+No Description"
         },
         {
           "className": "LabelEditActions",
           "docString": "<h3>LabelEditActions</h3>Namespace for functions for Edit Label submenu "
         },
         {
           "className": "LabelGlyphHandle",
           "docString": "<h3>LabelGlyphHandle</h3>+No Description"
         },
         {
           "className": "LabelState",
           "docString": "<h3>LabelState</h3>+No Description"
         },
         {
           "className": "LabelStruct",
           "docString": "<h3>LabelStruct</h3>A LabelStruct holds information for ONE label in a LabelTrack "
         },
         {
           "className": "LabelTextHandle",
           "docString": "<h3>LabelTextHandle</h3>+No Description"
         },
         {
           "className": "LabelTrackControls",
           "docString": "<h3>LabelTrackControls</h3>+No Description"
         },
         {
           "className": "LabelTrackEvent",
           "docString": "<h3>LabelTrackEvent</h3>+No Description"
         },
         {
           "className": "LabelTrackHit",
           "docString": "<h3>LabelTrackHit</h3>+No Description"
         },
         {
           "className": "LabelTrackMenuTable",
           "docString": "<h3>LabelTrackMenuTable</h3>+No Description"
         },
         {
           "className": "LabelTrackView",
           "docString": "<h3>LabelTrackView</h3>+No Description"
         },
         {
           "className": "LabelTrackVRulerControls",
           "docString": "<h3>LabelTrackVRulerControls</h3>+No Description"
         },
         {
           "className": "LabelTrack",
           "docString": "<h3>LabelTrack</h3>A LabelTrack is a Track that holds labels (LabelStruct) ",
           "isHead": true
         },
         {
           "className": "NoteTrackButtonHandle",
           "docString": "<h3>NoteTrackButtonHandle</h3>+No Description",
           "category":"Tracks",
           "snakeStyle": 2
         },
         {
           "className": "NoteTrackControls",
           "docString": "<h3>NoteTrackControls</h3>+No Description"
         },
         {
           "className": "NoteTrackDisplayData",
           "docString": "<h3>NoteTrackDisplayData</h3>Data used to display a note track "
         },
         {
           "className": "NoteTrackMenuTable",
           "docString": "<h3>NoteTrackMenuTable</h3>+No Description"
         },
         {
           "className": "NoteTrackTCPLines",
           "docString": "<h3>NoteTrackTCPLines</h3>+No Description"
         },
         {
           "className": "NoteTrackView",
           "docString": "<h3>NoteTrackView</h3>+No Description"
         },
         {
           "className": "NoteTrackVRulerControls",
           "docString": "<h3>NoteTrackVRulerControls</h3>+No Description"
         },
         {
           "className": "NoteTrackVRulerMenuTable",
           "docString": "<h3>NoteTrackVRulerMenuTable</h3>+No Description"
         },
         {
           "className": "NoteTrackVZoomHandle",
           "docString": "<h3>NoteTrackVZoomHandle</h3>+No Description"
         },
         {
           "className": "NoteTrack",
           "docString": "<h3>NoteTrack</h3>A Track that is used for Midi notes. (Somewhat old code) ",
           "isHead": true
         },
         {
           "className": "IdentityTimeWarper",
           "docString": "<h3>IdentityTimeWarper</h3>No change to time at all ",
           "category":"Tracks",
           "snakeStyle": 2
         },
         {
           "className": "LinearInputInverseRateTimeWarper",
           "docString": "<h3>LinearInputInverseRateTimeWarper</h3>TimeScale - inverse rate varies linearly with input "
         },
         {
           "className": "LinearInputRateTimeWarper",
           "docString": "<h3>LinearInputRateTimeWarper</h3>TimeScale - rate varies linearly with input "
         },
         {
           "className": "LinearInputStretchTimeWarper",
           "docString": "<h3>LinearInputStretchTimeWarper</h3>+No Description"
         },
         {
           "className": "LinearOutputRateTimeWarper",
           "docString": "<h3>LinearOutputRateTimeWarper</h3>TimeScale - rate varies linearly with output "
         },
         {
           "className": "LinearOutputStretchTimeWarper",
           "docString": "<h3>LinearOutputStretchTimeWarper</h3>+No Description"
         },
         {
           "className": "LinearTimeWarper",
           "docString": "<h3>LinearTimeWarper</h3>Linear scaling, initialised by giving two points on the line "
         },
         {
           "className": "GeometricInputRateTimeWarper",
           "docString": "<h3>GeometricInputRateTimeWarper</h3>TimeScale - rate varies geometrically with input "
         },
         {
           "className": "GeometricInputTimeWarper",
           "docString": "<h3>GeometricInputTimeWarper</h3>+No Description"
         },
         {
           "className": "GeometricOutputRateTimeWarper",
           "docString": "<h3>GeometricOutputRateTimeWarper</h3>TimeScale - rate varies geometrically with output "
         },
         {
           "className": "GeometricOutputTimeWarper",
           "docString": "<h3>GeometricOutputTimeWarper</h3>+No Description"
         },
         {
           "className": "RegionTimeWarper",
           "docString": "<h3>RegionTimeWarper</h3>No change before the specified region; during the region, warp according to the given warper; after the region, constant shift so as to match at the end of the warped region "
         },
         {
           "className": "ShiftTimeWarper",
           "docString": "<h3>ShiftTimeWarper</h3>Behaves like another, given TimeWarper, except shifted by a fixed amount "
         },
         {
           "className": "StepTimeWarper",
           "docString": "<h3>StepTimeWarper</h3>Like identity but with a jump "
         },
         {
           "className": "WarpOptions",
           "docString": "<h3>WarpOptions</h3>+No Description"
         },
         {
           "className": "TimeWarper",
           "docString": "<h3>TimeWarper</h3>TimeWarpers support TimeTracks.  Transforms one point in time to another point. For example, a time stretching effect might use one to keep track of what happens to labels and split points in the input "
         },
         {
           "className": "TimeTrackControls",
           "docString": "<h3>TimeTrackControls</h3>+No Description"
         },
         {
           "className": "TimeTrackMenuTable",
           "docString": "<h3>TimeTrackMenuTable</h3>+No Description"
         },
         {
           "className": "TimeTrackView",
           "docString": "<h3>TimeTrackView</h3>+No Description"
         },
         {
           "className": "TimeTrackVRulerControls",
           "docString": "<h3>TimeTrackVRulerControls</h3>+No Description"
         },
         {
           "className": "TimeTrack",
           "docString": "<h3>TimeTrack</h3>A kind of Track used to 'warp time' ",
           "isHead": true
         },
         {
           "className": "WaveTrackCache",
           "docString": "<h3>WaveTrackCache</h3>+No Description",
           "category":"Tracks",
           "snakeStyle": 2
         },
         {
           "className": "WaveTrackControls",
           "docString": "<h3>WaveTrackControls</h3>+No Description"
         },
         {
           "className": "WaveTrackLocation",
           "docString": "<h3>WaveTrackLocation</h3>+No Description"
         },
         {
           "className": "WaveTrackLockDeleter",
           "docString": "<h3>WaveTrackLockDeleter</h3>+No Description"
         },
         {
           "className": "WaveTrackMenuTable",
           "docString": "<h3>WaveTrackMenuTable</h3>+No Description"
         },
         {
           "className": "WaveTrackSubView",
           "docString": "<h3>WaveTrackSubView</h3>+No Description"
         },
         {
           "className": "WaveTrackSubViewPlacement",
           "docString": "<h3>WaveTrackSubViewPlacement</h3>+No Description"
         },
         {
           "className": "WaveTrackTCPLines",
           "docString": "<h3>WaveTrackTCPLines</h3>+No Description"
         },
         {
           "className": "WaveTrackView",
           "docString": "<h3>WaveTrackView</h3>+No Description"
         },
         {
           "className": "WaveTrackViewConstants",
           "docString": "<h3>WaveTrackViewConstants</h3>+No Description"
         },
         {
           "className": "WaveTrackVRulerControls",
           "docString": "<h3>WaveTrackVRulerControls</h3>+No Description"
         },
         {
           "className": "WaveTrackVRulerMenuTable",
           "docString": "<h3>WaveTrackVRulerMenuTable</h3>+No Description"
         },
         {
           "className": "WaveTrackVZoomHandle",
           "docString": "<h3>WaveTrackVZoomHandle</h3>+No Description"
         },
         {
           "className": "WaveCache",
           "docString": "<h3>WaveCache</h3>Cache used with WaveClip to cache wave information (for drawing) "
         },
         {
           "className": "WaveClip",
           "docString": "<h3>WaveClip</h3>This allows multiple clips to be a part of one WaveTrack "
         },
         {
           "className": "WaveColorMenuTable",
           "docString": "<h3>WaveColorMenuTable</h3>No Description"
         },
         {
           "className": "WaveDisplay",
           "docString": "<h3>WaveDisplay</h3>No Description"
         },
         {
           "className": "WaveformSettings",
           "docString": "<h3>WaveformSettings</h3>Waveform settings, either for one track or as defaults "
         },
         {
           "className": "WaveformView",
           "docString": "<h3>WaveformView</h3>No Description"
         },
         {
           "className": "WaveformVRulerControls",
           "docString": "<h3>WaveformVRulerControls</h3>No Description"
         },
         {
           "className": "WaveformVRulerMenuTable",
           "docString": "<h3>WaveformVRulerMenuTable</h3>No Description"
         },
         {
           "className": "WaveformVZoomHandle",
           "docString": "<h3>WaveformVZoomHandle</h3>No Description"
         },
         {
           "className": "WaveTrack",
           "docString": "<h3>WaveTrack</h3>A Track that contains audio waveform data ",
           "isHead": true
         },
         {
           "className": "Export",
           "docString": "<h3>Export</h3>Main class to control the export function ",
           "category":"Exports",
           "snakeStyle": 1
         },
         {
           "className": "ExportCL",
           "docString": "<h3>ExportCL</h3>No Description"
         },
         {
           "className": "ExportCLOptions",
           "docString": "<h3>ExportCLOptions</h3>No Description"
         },
         {
           "className": "ExportCLProcess",
           "docString": "<h3>ExportCLProcess</h3>No Description"
         },
         {
           "className": "Exporter",
           "docString": "<h3>Exporter</h3>No Description"
         },
         {
           "className": "ExportFFmpeg",
           "docString": "<h3>ExportFFmpeg</h3>Controlling class for FFmpeg exporting. Creates the options dialog of the appropriate type, adds tags and invokes the export function "
         },
         {
           "className": "ExportFFmpegAACOptions",
           "docString": "<h3>ExportFFmpegAACOptions</h3>Options dialog for FFmpeg exporting of AAC format "
         },
         {
           "className": "ExportFFmpegAC3Options",
           "docString": "<h3>ExportFFmpegAC3Options</h3>AC3 export options dialog "
         },
         {
           "className": "ExportFFmpegAMRNBOptions",
           "docString": "<h3>ExportFFmpegAMRNBOptions</h3>Options dialog for FFmpeg exporting of AMRNB format "
         },
         {
           "className": "ExportFFmpegCustomOptions",
           "docString": "<h3>ExportFFmpegCustomOptions</h3>No Description"
         },
         {
           "className": "ExportFFmpegOptions",
           "docString": "<h3>ExportFFmpegOptions</h3>Custom FFmpeg export dialog "
         },
         {
           "className": "ExportFFmpegWMAOptions",
           "docString": "<h3>ExportFFmpegWMAOptions</h3>Options dialog for FFmpeg exporting of WMA format "
         },
         {
           "className": "ExportFLAC",
           "docString": "<h3>ExportFLAC</h3>No Description"
         },
         {
           "className": "ExportFLACOptions",
           "docString": "<h3>ExportFLACOptions</h3>No Description"
         },
         {
           "className": "ExportMP3",
           "docString": "<h3>ExportMP3</h3>No Description"
         },
         {
           "className": "ExportMP3Options",
           "docString": "<h3>ExportMP3Options</h3>No Description"
         },
         {
           "className": "ExportOGG",
           "docString": "<h3>ExportOGG</h3>No Description"
         },
         {
           "className": "ExportOGGOptions",
           "docString": "<h3>ExportOGGOptions</h3>No Description"
         },
         {
           "className": "ExportPCM",
           "docString": "<h3>ExportPCM</h3>No Description"
         },
         {
           "className": "ExportPCMOptions",
           "docString": "<h3>ExportPCMOptions</h3>No Description"
         },
         {
           "className": "MP2Exporter",
           "docString": "<h3>MP2Exporter</h3>Class used to export MP2 files "
         },
         {
           "className": "MP3Exporter",
           "docString": "<h3>MP3Exporter</h3>Class used to export MP3 files "
         },
         {
           "className": "MP3ImportFileHandle",
           "docString": "<h3>MP3ImportFileHandle</h3>An ImportFileHandle for MP3 data "
         },
         {
           "className": "MultiFormatReader",
           "docString": "<h3>MultiFormatReader</h3>MultiFormatReader reads raw audio files in different formats and machine endianness representations "
         },
         {
           "className": "ExportType",
           "docString": "<h3>ExportType</h3>Container for information about supported export types "
         },
         {
           "className": "Export Classes",
           "docString": "<h3>Export Classes</h3>Many of these are FFmpeg",
           "isHead": true
         },
         {
           "className": "mad_bitptr",
           "docString": "<h3>mad_bitptr</h3>Struct in the MPEG library, used for MP3 compression by MP3Exporter ",
           "category":"Exports",
           "snakeStyle": 2
         },
         {
           "className": "mad_decoder",
           "docString": "<h3>mad_decoder</h3>Struct in the MPEG library, used for MP3 compression by MP3Exporter "
         },
         {
           "className": "mad_frame",
           "docString": "<h3>mad_frame</h3>Struct in the MPEG library, used for MP3 compression by MP3Exporter "
         },
         {
           "className": "mad_header",
           "docString": "<h3>mad_header</h3>Struct in the MPEG library, used for MP3 compression by MP3Exporter "
         },
         {
           "className": "mad_pcm",
           "docString": "<h3>mad_pcm</h3>Struct in the MPEG library, used for MP3 compression by MP3Exporter "
         },
         {
           "className": "mad_stream",
           "docString": "<h3>mad_stream</h3>Struct in the MPEG library, used for MP3 compression by MP3Exporter "
         },
         {
           "className": "mad_synth",
           "docString": "<h3>mad_synth</h3>Struct in the MPEG library, used for MP3 compression by MP3Exporter "
         },
         {
           "className": "mad_timer_t",
           "docString": "<h3>mad_timer_t</h3>Struct in the MPEG library, used for MP3 compression by MP3Exporter "
         },
         {
           "className": "Mad",
           "docString": "<h3>Mad</h3>The MP3 compression library for exporting MP3 audio",
           "isHead": true
         },
         {
           "className": "ImporterClientInterface",
           "docString": "<h3>ImporterClientInterface</h3>+No Description",
           "category":"Exports",
           "snakeStyle": 2
         },
         {
           "className": "ImporterHostInterface",
           "docString": "<h3>ImporterHostInterface</h3>+No Description"
         },
         {
           "className": "ImporterInterface",
           "docString": "<h3>ImporterInterface</h3>+No Description"
         },
         {
           "className": "ImportFileHandle",
           "docString": "<h3>ImportFileHandle</h3>An ImportFileHandle for data "
         },
         {
           "className": "ImportXMLTagHandler",
           "docString": "<h3>ImportXMLTagHandler</h3>+No Description"
         },
         {
           "className": "Importer",
           "docString": "<h3>Importer</h3>Class which actulaly imports the auido, using functions defined in ImportPCM.cpp, ImportMP3.cpp, ImportOGG.cpp, ImportRawData.cpp, and ImportLOF.cpp ",
           "isHead": true
         }


    ]}
  ]}



,
{"Image":"svg",
"src":"IconEffects.svg",
"opacity":0.2}]}]



</pre>




















































































         {
           "className": "ClientData",
           "docString": "<h3>ClientData</h3>+No Description",
           "category":"Misc",
           "snakeStyle": 1
         },
         {
           "className": "__make_unique_result",
           "docString": "<h3>__make_unique_result</h3>No Description"
         },
         {
           "className": "__make_unique_result< X[]>",
           "docString": "<h3>__make_unique_result< X[]></h3>No Description"
         },
         {
           "className": "AboutDialogCreditItem",
           "docString": "<h3>AboutDialogCreditItem</h3>AboutDialogCreditItem is a structure used by the AboutDialog to hold information about one contributor to Audacity "
         },
         {
           "className": "ADCChanger",
           "docString": "<h3>ADCChanger</h3>Makes temporary drawing context changes that you back out of, RAII style "
         },
         {
           "className": "AddedAnalysisTrack",
           "docString": "<h3>AddedAnalysisTrack</h3>No Description"
         },
         {
           "className": "AliasedFile",
           "docString": "<h3>AliasedFile</h3>An audio file that is referenced (pointed into) directly from an Audacity .aup file rather thna Audacity having its own copies of the data "
         },
         {
           "className": "applicable1",
           "docString": "<h3>applicable1</h3>No Description"
         },
         {
           "className": "applicable2",
           "docString": "<h3>applicable2</h3>No Description"
         },
         {
           "className": "ApplicableFor",
           "docString": "<h3>ApplicableFor</h3>Entry for the Applicability table "
         },
         {
           "className": "AttachableScrollBar",
           "docString": "<h3>AttachableScrollBar</h3>An AttachableScrollBar is a scroll bar that can be attached to multiple items and so control their scrolling. Uses floats internally, not ints, allowing for (external) control of zooming "
         },
         {
           "className": "AttachedVirtualFunction",
           "docString": "<h3>AttachedVirtualFunction</h3>No Description"
         },
         {
           "className": "AUControl",
           "docString": "<h3>AUControl</h3>WxControl with Cocoa/Carbon support "
         },
         {
           "className": "AUControlImpl",
           "docString": "<h3>AUControlImpl</h3>WxWidgetCocoaImpl "
         },
         {
           "className": "AutoDuckRegion",
           "docString": "<h3>AutoDuckRegion</h3>Struct that holds a start and end time "
         },
         {
           "className": "AutoRollbackRenamer",
           "docString": "<h3>AutoRollbackRenamer</h3>AutoRollbackRenamer handles the renaming of files which is needed when producing a NEW version of a file which may fail. On failure the old version is put back in place "
         },
         {
           "className": "AutoSaveFile",
           "docString": "<h3>AutoSaveFile</h3>Class wrapping reading and writing of arbitrary data in text or binary format to a file "
         },
         {
           "className": "BackgroundCell",
           "docString": "<h3>BackgroundCell</h3>Class representing the background of a Track. It provides the hit test function that tells us what was hit "
         },
         {
           "className": "BackgroundHandle",
           "docString": "<h3>BackgroundHandle</h3>No Description"
         },
         {
           "className": "BalanceInfo",
           "docString": "<h3>BalanceInfo</h3>No Description"
         },
         {
           "className": "Base",
           "docString": "<h3>Base</h3>No Description"
         },
         {
           "className": "BaseItem",
           "docString": "<h3>BaseItem</h3>No Description"
         },
         {
           "className": "BE_CONFIG",
           "docString": "<h3>BE_CONFIG</h3>BE_CONFIG is a structure defined in the Blade DLL Interface for LAME (MP3 Conversion DLL) "
         },
         {
           "className": "BE_VERSION",
           "docString": "<h3>BE_VERSION</h3>BE_VERSION is a structure defined in the Blade DLL Interface for LAME (MP3 Conversion DLL) "
         },
         {
           "className": "BlockArray",
           "docString": "<h3>BlockArray</h3>No Description"
         },
         {
           "className": "BlockGenerator",
           "docString": "<h3>BlockGenerator</h3>No Description"
         },
         {
           "className": "BoundedEnvelope",
           "docString": "<h3>BoundedEnvelope</h3>No Description"
         },
         {
           "className": "Buffer",
           "docString": "<h3>Buffer</h3>No Description"
         },
         {
           "className": "BuiltinEffectsModule",
           "docString": "<h3>BuiltinEffectsModule</h3>Internal module to auto register all built in effects "
         },
         {
           "className": "BuiltinFormatString",
           "docString": "<h3>BuiltinFormatString</h3>Struct to hold a formatting control string and its user facing name Used in an array to hold the built-in time formats that are always available to the user "
         },
         {
           "className": "ButtonHandle",
           "docString": "<h3>ButtonHandle</h3>A UIHandle for a TrackPanel button, such as the Mute and Solo buttons "
         },
         {
           "className": "CFReleaser",
           "docString": "<h3>CFReleaser</h3>No Description"
         },
         {
           "className": "ChoiceEditor",
           "docString": "<h3>ChoiceEditor</h3>Modified version of wxGridChoiceEditor using wxChoice instead of wxComboBox "
         },
         {
           "className": "CHOICES",
           "docString": "<h3>CHOICES</h3>No Description"
         },
         {
           "className": "ChoiceSetting",
           "docString": "<h3>ChoiceSetting</h3>No Description"
         },
         {
           "className": "ClipActions",
           "docString": "<h3>ClipActions</h3>Namespace for functions for Clip menu "
         },
         {
           "className": "Clipboard",
           "docString": "<h3>Clipboard</h3>No Description"
         },
         {
           "className": "ClipMoveState",
           "docString": "<h3>ClipMoveState</h3>No Description"
         },
         {
           "className": "ClipParameters",
           "docString": "<h3>ClipParameters</h3>No Description"
         },
         {
           "className": "Cloneable",
           "docString": "<h3>Cloneable</h3>No Description"
         },
         {
           "className": "CloseButtonHandle",
           "docString": "<h3>CloseButtonHandle</h3>No Description"
         },
         {
           "className": "CombinedMessageTarget",
           "docString": "<h3>CombinedMessageTarget</h3>Sends messages to two message targets at once "
         },
         {
           "className": "ComboEditor",
           "docString": "<h3>ComboEditor</h3>No Description"
         },
         {
           "className": "CommonRulerHandle",
           "docString": "<h3>CommonRulerHandle</h3>No Description"
         },
         {
           "className": "CommonTrackCell",
           "docString": "<h3>CommonTrackCell</h3>No Description"
         },
         {
           "className": "CommonTrackControls",
           "docString": "<h3>CommonTrackControls</h3>No Description"
         },
         {
           "className": "CommonTrackPanelCell",
           "docString": "<h3>CommonTrackPanelCell</h3>No Description"
         },
         {
           "className": "CommonTrackView",
           "docString": "<h3>CommonTrackView</h3>No Description"
         },
         {
           "className": "CompatibilityEntry",
           "docString": "<h3>CompatibilityEntry</h3>Describes format-codec compatibility "
         },
         {
           "className": "ComponentInterface",
           "docString": "<h3>ComponentInterface</h3>ComponentInterface provides name / vendor / version functions to identify plugins. It is what makes a class a plug-in. Additionally it provides an optional parameter definitions function, for those components such as commands, effects and (soon) preference pagess that define parameters "
         },
         {
           "className": "ComponentInterfaceSymbol",
           "docString": "<h3>ComponentInterfaceSymbol</h3>ComponentInterfaceSymbol pairs a persistent string identifier used internally with an optional, different string as msgid for lookup in a translation catalog "
         },
         {
           "className": "ComputedItem",
           "docString": "<h3>ComputedItem</h3>No Description"
         },
         {
           "className": "ConditionalGroupItem",
           "docString": "<h3>ConditionalGroupItem</h3>No Description"
         },
         {
           "className": "ConfigClientInterface",
           "docString": "<h3>ConfigClientInterface</h3>ConfigClientInterface is an unholy get/set configuration class, which differentiates between private and shared config. It should probably be replaced with a Shuttle "
         },
         {
           "className": "Copyable",
           "docString": "<h3>Copyable</h3>No Description"
         },
         {
           "className": "Copyable< Container, DeepCopying >",
           "docString": "<h3>Copyable< Container, DeepCopying ></h3>No Description"
         },
         {
           "className": "Copyable< Container, ShallowCopying >",
           "docString": "<h3>Copyable< Container, ShallowCopying ></h3>No Description"
         },
         {
           "className": "Copyable< Container, SkipCopying >",
           "docString": "<h3>Copyable< Container, SkipCopying ></h3>No Description"
         },
         {
           "className": "CrossFader",
           "docString": "<h3>CrossFader</h3>Not used by Audacity (yet) apparently work in progress that has been abandoned "
         },
         {
           "className": "Cursor",
           "docString": "<h3>Cursor</h3>No Description"
         },
         {
           "className": "CutlineHandle",
           "docString": "<h3>CutlineHandle</h3>No Description"
         },
         {
           "className": "Data",
           "docString": "<h3>Data</h3>No Description"
         },
         {
           "className": "DCUnchanger",
           "docString": "<h3>DCUnchanger</h3>Used to restore pen, brush and logical-op in a DC back to what they were "
         },
         {
           "className": "DefaultConfigEntry",
           "docString": "<h3>DefaultConfigEntry</h3>No Description"
         },
         {
           "className": "DefaultDelayedHandlerAction",
           "docString": "<h3>DefaultDelayedHandlerAction</h3>Performs the delayed configured action, when invoked "
         },
         {
           "className": "Deleter",
           "docString": "<h3>Deleter</h3>No Description"
         },
         {
           "className": "DeleteUpdateMutexLocker",
           "docString": "<h3>DeleteUpdateMutexLocker</h3>No Description"
         },
         {
           "className": "Destroyer",
           "docString": "<h3>Destroyer</h3>A deleter class to supply the second template parameter of unique_ptr for classes like wxWindow that should be sent a message called Destroy rather than be deleted directly "
         },
         {
           "className": "DeviceManager",
           "docString": "<h3>DeviceManager</h3>A singleton that manages the audio devices known to Audacity "
         },
         {
           "className": "DeviceSourceMap",
           "docString": "<h3>DeviceSourceMap</h3>No Description"
         },
         {
           "className": "Diags",
           "docString": "<h3>Diags</h3>Processing of the macros for recording bad events or performance monitoring "
         },
         {
           "className": "DigitInfo",
           "docString": "<h3>DigitInfo</h3>DigitInfo is a class used in NumericTextCtrl "
         },
         {
           "className": "Disabler",
           "docString": "<h3>Disabler</h3>No Description"
         },
         {
           "className": "Dispatcher",
           "docString": "<h3>Dispatcher</h3>No Description"
         },
         {
           "className": "Dither",
           "docString": "<h3>Dither</h3>This class implements various functions for dithering and is derived from the dither code in the Ardour project, written by Steve Harris "
         },
         {
           "className": "EditActions",
           "docString": "<h3>EditActions</h3>No Description"
         },
         {
           "className": "EditCursorOverlay",
           "docString": "<h3>EditCursorOverlay</h3>No Description"
         },
         {
           "className": "Enums",
           "docString": "<h3>Enums</h3>Enums is a helper class for Shuttle. It defines enumerations which are used in effects dialogs, in the effects themselves and in preferences "
         },
         {
           "className": "EnumSetting",
           "docString": "<h3>EnumSetting</h3>No Description"
         },
         {
           "className": "EventMonitor",
           "docString": "<h3>EventMonitor</h3>No Description"
         },
         {
           "className": "Executor",
           "docString": "<h3>Executor</h3>No Description"
         },
         {
           "className": "Executor< R, ConcreteType >",
           "docString": "<h3>Executor< R, ConcreteType ></h3>No Description"
         },
         {
           "className": "Executor< R, ConcreteType, Function, Functions... >",
           "docString": "<h3>Executor< R, ConcreteType, Function, Functions... ></h3>No Description"
         },
         {
           "className": "Executor< R, const ConcreteType, Function, Functions... >",
           "docString": "<h3>Executor< R, const ConcreteType, Function, Functions... ></h3>No Description"
         },
         {
           "className": "Executor< void, ConcreteType >",
           "docString": "<h3>Executor< void, ConcreteType ></h3>No Description"
         },
         {
           "className": "ExpandingToolBarEvtHandler",
           "docString": "<h3>ExpandingToolBarEvtHandler</h3>A custom event handler for ExpandingToolBar "
         },
         {
           "className": "ExposedFormat",
           "docString": "<h3>ExposedFormat</h3>Describes export type "
         },
         {
           "className": "ExtImportItem",
           "docString": "<h3>ExtImportItem</h3>No Description"
         },
         {
           "className": "ExtImportPrefsDropTarget",
           "docString": "<h3>ExtImportPrefsDropTarget</h3>No Description"
         },
         {
           "className": "ExtraActions",
           "docString": "<h3>ExtraActions</h3>Namespace for helper functions for Extra menu "
         },
         {
           "className": "ExtTargetFactory",
           "docString": "<h3>ExtTargetFactory</h3>Extended Target Factory with more options "
         },
         {
           "className": "FFTDeleter",
           "docString": "<h3>FFTDeleter</h3>No Description"
         },
         {
           "className": "FFTParam",
           "docString": "<h3>FFTParam</h3>No Description"
         },
         {
           "className": "fifo_t",
           "docString": "<h3>fifo_t</h3>No Description"
         },
         {
           "className": "FileActions",
           "docString": "<h3>FileActions</h3>No Description"
         },
         {
           "className": "FileHistory",
           "docString": "<h3>FileHistory</h3>Similar to wxFileHistory, but customized to our needs "
         },
         {
           "className": "FileIO",
           "docString": "<h3>FileIO</h3>No Description"
         },
         {
           "className": "FileNames",
           "docString": "<h3>FileNames</h3>Provides Static functions to yield filenames "
         },
         {
           "className": "Filter",
           "docString": "<h3>Filter</h3>No Description"
         },
         {
           "className": "filter_array_t",
           "docString": "<h3>filter_array_t</h3>No Description"
         },
         {
           "className": "filter_t",
           "docString": "<h3>filter_t</h3>No Description"
         },
         {
           "className": "Final_action",
           "docString": "<h3>Final_action</h3>\"finally\" as in The C++ Programming Language, 4th ed., p. 358 Useful for defining ad-hoc RAII actions. typical usage: auto cleanup = finally([&]{ ... code; ... }); "
         },
         {
           "className": "FLAC__StreamMetadataDeleter",
           "docString": "<h3>FLAC__StreamMetadataDeleter</h3>No Description"
         },
         {
           "className": "FLACImportFileHandle",
           "docString": "<h3>FLACImportFileHandle</h3>An ImportFileHandle for FLAC data "
         },
         {
           "className": "Flags",
           "docString": "<h3>Flags</h3>No Description"
         },
         {
           "className": "FlowPacker",
           "docString": "<h3>FlowPacker</h3>Packs rectangular boxes into a rectangle, using simple first fit "
         },
         {
           "className": "FocusHandler",
           "docString": "<h3>FocusHandler</h3>No Description"
         },
         {
           "className": "Fonts",
           "docString": "<h3>Fonts</h3>No Description"
         },
         {
           "className": "Format",
           "docString": "<h3>Format</h3>Abstract base class used in importing a file "
         },
         {
           "className": "FormatClassifier",
           "docString": "<h3>FormatClassifier</h3>FormatClassifier classifies the sample format and endianness of raw audio files "
         },
         {
           "className": "FormatClassT",
           "docString": "<h3>FormatClassT</h3>No Description"
         },
         {
           "className": "FormatInfo",
           "docString": "<h3>FormatInfo</h3>No Description"
         },
         {
           "className": "FormatMenuTable",
           "docString": "<h3>FormatMenuTable</h3>No Description"
         },
         {
           "className": "FoundCell",
           "docString": "<h3>FoundCell</h3>No Description"
         },
         {
           "className": "freer",
           "docString": "<h3>freer</h3>No Description"
         },
         {
           "className": "FreqGauge",
           "docString": "<h3>FreqGauge</h3>No Description"
         },
         {
           "className": "FreqPlot",
           "docString": "<h3>FreqPlot</h3>Works with FreqWindow to dsplay a spectrum plot of the waveform. This class actually does the graph display "
         },
         {
           "className": "g_mutex_locker",
           "docString": "<h3>g_mutex_locker</h3>No Description"
         },
         {
           "className": "GainSliderHandle",
           "docString": "<h3>GainSliderHandle</h3>No Description"
         },
         {
           "className": "Generator",
           "docString": "<h3>Generator</h3>No Description"
         },
         {
           "className": "GetFileNameResult",
           "docString": "<h3>GetFileNameResult</h3>No Description"
         },
         {
           "className": "Globals",
           "docString": "<h3>Globals</h3>No Description"
         },
         {
           "className": "Globals",
           "docString": "<h3>Globals</h3>No Description"
         },
         {
           "className": "Grabber",
           "docString": "<h3>Grabber</h3>The widget to the left of a ToolBar that allows it to be dragged around to NEW positions "
         },
         {
           "className": "GrabberEvent",
           "docString": "<h3>GrabberEvent</h3>Grabber Class "
         },
         {
           "className": "Grid",
           "docString": "<h3>Grid</h3>Supplies an accessible grid based on wxGrid "
         },
         {
           "className": "GroupItem",
           "docString": "<h3>GroupItem</h3>No Description"
         },
         {
           "className": "GrowableSampleBuffer",
           "docString": "<h3>GrowableSampleBuffer</h3>No Description"
         },
         {
           "className": "GStreamContext",
           "docString": "<h3>GStreamContext</h3>No Description"
         },
         {
           "className": "GStreamerImportFileHandle",
           "docString": "<h3>GStreamerImportFileHandle</h3>! Does actual import, returned by GStreamerImportPlugin::Open "
         },
         {
           "className": "HelpActions",
           "docString": "<h3>HelpActions</h3>No Description"
         },
         {
           "className": "HelpSystem",
           "docString": "<h3>HelpSystem</h3>Class which contains static methods and data needed for implementing help buttons "
         },
         {
           "className": "HighlightTextCtrl",
           "docString": "<h3>HighlightTextCtrl</h3>No Description"
         },
         {
           "className": "HitTestPreview",
           "docString": "<h3>HitTestPreview</h3>No Description"
         },
         {
           "className": "HtmlWindow",
           "docString": "<h3>HtmlWindow</h3>HtmlWindow Class "
         },
         {
           "className": "Identifier",
           "docString": "<h3>Identifier</h3>No Description"
         },
         {
           "className": "identity",
           "docString": "<h3>identity</h3>No Description"
         },
         {
           "className": "ImageArr",
           "docString": "<h3>ImageArr</h3>No Description"
         },
         {
           "className": "ImageRoll",
           "docString": "<h3>ImageRoll</h3>An ImageRoll is an image that can be expanded to an arbitrary size; it is made up of both fixed pieces and repeating pieces "
         },
         {
           "className": "inapplicable",
           "docString": "<h3>inapplicable</h3>No Description"
         },
         {
           "className": "InstallHandlers",
           "docString": "<h3>InstallHandlers</h3>No Description"
         },
         {
           "className": "InstallHook",
           "docString": "<h3>InstallHook</h3>No Description"
         },
         {
           "className": "InstallTopPanelHook",
           "docString": "<h3>InstallTopPanelHook</h3>No Description"
         },
         {
           "className": "InteractiveOutputTargets",
           "docString": "<h3>InteractiveOutputTargets</h3>InteractiveOutputTargets is an output target that pops up a dialog, if necessary "
         },
         {
           "className": "Internat",
           "docString": "<h3>Internat</h3>Internationalisation support "
         },
         {
           "className": "Interval",
           "docString": "<h3>Interval</h3>No Description"
         },
         {
           "className": "InvalidRegion",
           "docString": "<h3>InvalidRegion</h3>No Description"
         },
         {
           "className": "IPCConn",
           "docString": "<h3>IPCConn</h3>No Description"
         },
         {
           "className": "IPCServ",
           "docString": "<h3>IPCServ</h3>No Description"
         },
         {
           "className": "IsVisibleTrack",
           "docString": "<h3>IsVisibleTrack</h3>No Description"
         },
         {
           "className": "ItemData",
           "docString": "<h3>ItemData</h3>No Description"
         },
         {
           "className": "IteratorRange",
           "docString": "<h3>IteratorRange</h3>A convenience for use with range-for "
         },
         {
           "className": "KeyboardCapture",
           "docString": "<h3>KeyboardCapture</h3>No Description"
         },
         {
           "className": "KeyNode",
           "docString": "<h3>KeyNode</h3>No Description"
         },
         {
           "className": "KeyView",
           "docString": "<h3>KeyView</h3>Provides multiple views of keyboard shortcuts "
         },
         {
           "className": "lame_global_flags",
           "docString": "<h3>lame_global_flags</h3>Struct with zillion of control parameters that control lame export (MP3 Conversion DLL) "
         },
         {
           "className": "LayoutVisitor",
           "docString": "<h3>LayoutVisitor</h3>No Description"
         },
         {
           "className": "Legacy",
           "docString": "<h3>Legacy</h3>No Description"
         },
         {
           "className": "LinkingHtmlWindow",
           "docString": "<h3>LinkingHtmlWindow</h3>An HtmlWindow that handles linked clicked - usually the link will go to our own local copy of the manual, but it could launch a new browser window "
         },
         {
           "className": "Listener",
           "docString": "<h3>Listener</h3>No Description"
         },
         {
           "className": "Location",
           "docString": "<h3>Location</h3>Used only by WaveTrack, a special way to hold location that can accommodate merged regions "
         },
         {
           "className": "Lock",
           "docString": "<h3>Lock</h3>No Description"
         },
         {
           "className": "Lockable",
           "docString": "<h3>Lockable</h3>No Description"
         },
         {
           "className": "Lockable< Object, NoLocking >",
           "docString": "<h3>Lockable< Object, NoLocking ></h3>No Description"
         },
         {
           "className": "Lockable< Object, NonrecursiveLocking >",
           "docString": "<h3>Lockable< Object, NonrecursiveLocking ></h3>No Description"
         },
         {
           "className": "Lockable< Object, RecursiveLocking >",
           "docString": "<h3>Lockable< Object, RecursiveLocking ></h3>No Description"
         },
         {
           "className": "Locked",
           "docString": "<h3>Locked</h3>No Description"
         },
         {
           "className": "Locker",
           "docString": "<h3>Locker</h3>No Description"
         },
         {
           "className": "LOFImportFileHandle",
           "docString": "<h3>LOFImportFileHandle</h3>An ImportFileHandle for LOF data "
         },
         {
           "className": "Lookup",
           "docString": "<h3>Lookup</h3>No Description"
         },
         {
           "className": "LWSlider",
           "docString": "<h3>LWSlider</h3>Lightweight version of ASlider. In other words it does not have a window permanently associated with it "
         },
         {
           "className": "LyricsWindow",
           "docString": "<h3>LyricsWindow</h3>No Description"
         },
         {
           "className": "MachineEndianness",
           "docString": "<h3>MachineEndianness</h3>No Description"
         },
         {
           "className": "MacrosWindow",
           "docString": "<h3>MacrosWindow</h3>No Description"
         },
         {
           "className": "MainGroup",
           "docString": "<h3>MainGroup</h3>No Description"
         },
         {
           "className": "Message",
           "docString": "<h3>Message</h3>No Description"
         },
         {
           "className": "MessageBoxTarget",
           "docString": "<h3>MessageBoxTarget</h3>Displays messages from a command in an AudacityMessageBox "
         },
         {
           "className": "MessageBuffer",
           "docString": "<h3>MessageBuffer</h3>No Description"
         },
         {
           "className": "MeterBar",
           "docString": "<h3>MeterBar</h3>A struct used by MeterPanel to hold the position of one bar "
         },
         {
           "className": "MeterPanelBase",
           "docString": "<h3>MeterPanelBase</h3>No Description"
         },
         {
           "className": "MeterUpdateMsg",
           "docString": "<h3>MeterUpdateMsg</h3>Message used to update the MeterPanel "
         },
         {
           "className": "MeterUpdateQueue",
           "docString": "<h3>MeterUpdateQueue</h3>Queue of MeterUpdateMsg used to feed the MeterPanel "
         },
         {
           "className": "MIDIParser",
           "docString": "<h3>MIDIParser</h3>Unused class that might someday be used again to read MIDI files into a NoteTrack "
         },
         {
           "className": "MidiThread",
           "docString": "<h3>MidiThread</h3>No Description"
         },
         {
           "className": "MinimizeButtonHandle",
           "docString": "<h3>MinimizeButtonHandle</h3>No Description"
         },
         {
           "className": "MinMaxRMS",
           "docString": "<h3>MinMaxRMS</h3>No Description"
         },
         {
           "className": "Mixer",
           "docString": "<h3>Mixer</h3>Functions for doing the mixdown of the tracks "
         },
         {
           "className": "MixerSpec",
           "docString": "<h3>MixerSpec</h3>Class used with Mixer "
         },
         {
           "className": "ModifiedAnalysisTrack",
           "docString": "<h3>ModifiedAnalysisTrack</h3>No Description"
         },
         {
           "className": "Module",
           "docString": "<h3>Module</h3>No Description"
         },
         {
           "className": "ModuleDeleter",
           "docString": "<h3>ModuleDeleter</h3>No Description"
         },
         {
           "className": "ModuleInterface",
           "docString": "<h3>ModuleInterface</h3>No Description"
         },
         {
           "className": "ModuleInterfaceDeleter",
           "docString": "<h3>ModuleInterfaceDeleter</h3>No Description"
         },
         {
           "className": "ModuleManager",
           "docString": "<h3>ModuleManager</h3>No Description"
         },
         {
           "className": "ModuleManagerInterface",
           "docString": "<h3>ModuleManagerInterface</h3>No Description"
         },
         {
           "className": "MouseEvtHandler",
           "docString": "<h3>MouseEvtHandler</h3>No Description"
         },
         {
           "className": "MusicalInstrument",
           "docString": "<h3>MusicalInstrument</h3>No Description"
         },
         {
           "className": "MuteButtonHandle",
           "docString": "<h3>MuteButtonHandle</h3>No Description"
         },
         {
           "className": "MyFLACFile",
           "docString": "<h3>MyFLACFile</h3>No Description"
         },
         {
           "className": "NavigationActions",
           "docString": "<h3>NavigationActions</h3>Namespace for functions for project navigation menu (part of Extra menu) "
         },
         {
           "className": "NonKeystrokeInterceptingWindow",
           "docString": "<h3>NonKeystrokeInterceptingWindow</h3>No Description"
         },
         {
           "className": "NormalizedKeyString",
           "docString": "<h3>NormalizedKeyString</h3>No Description"
         },
         {
           "className": "NotifyingSelectedRegion",
           "docString": "<h3>NotifyingSelectedRegion</h3>No Description"
         },
         {
           "className": "NullMessageTarget",
           "docString": "<h3>NullMessageTarget</h3>Used to ignore a command's message updates "
         },
         {
           "className": "NullProgressTarget",
           "docString": "<h3>NullProgressTarget</h3>Used to ignore a command's progress updates "
         },
         {
           "className": "NyqControl",
           "docString": "<h3>NyqControl</h3>A control on a NyquistDialog "
         },
         {
           "className": "NyquistEffect",
           "docString": "<h3>NyquistEffect</h3>An Effect that calls up a Nyquist (XLISP) plug-in, i.e. many possible effects from this one class "
         },
         {
           "className": "NyquistEffectsModule",
           "docString": "<h3>NyquistEffectsModule</h3>No Description"
         },
         {
           "className": "OggImportFileHandle",
           "docString": "<h3>OggImportFileHandle</h3>No Description"
         },
         {
           "className": "one_pole_t",
           "docString": "<h3>one_pole_t</h3>No Description"
         },
         {
           "className": "Overlay",
           "docString": "<h3>Overlay</h3>No Description"
         },
         {
           "className": "Override",
           "docString": "<h3>Override</h3>No Description"
         },
         {
           "className": "Pair",
           "docString": "<h3>Pair</h3>No Description"
         },
         {
           "className": "PanSliderHandle",
           "docString": "<h3>PanSliderHandle</h3>No Description"
         },
         {
           "className": "Params",
           "docString": "<h3>Params</h3>No Description"
         },
         {
           "className": "Params",
           "docString": "<h3>Params</h3>No Description"
         },
         {
           "className": "PaulStretch",
           "docString": "<h3>PaulStretch</h3>Class that helps EffectPaulStretch. It does the FFTs and inner loop of the effect "
         },
         {
           "className": "Pauser",
           "docString": "<h3>Pauser</h3>No Description"
         },
         {
           "className": "PCMImportFileHandle",
           "docString": "<h3>PCMImportFileHandle</h3>An ImportFileHandle for PCM data "
         },
         {
           "className": "Place",
           "docString": "<h3>Place</h3>No Description"
         },
         {
           "className": "PlatformCompatibility",
           "docString": "<h3>PlatformCompatibility</h3>Filename Compatibility utilities "
         },
         {
           "className": "PlayableTrack",
           "docString": "<h3>PlayableTrack</h3>An AudioTrack that can be played and stopped "
         },
         {
           "className": "PlayableTrackControls",
           "docString": "<h3>PlayableTrackControls</h3>No Description"
         },
         {
           "className": "PlaybackSchedule",
           "docString": "<h3>PlaybackSchedule</h3>No Description"
         },
         {
           "className": "PlaybackScroller",
           "docString": "<h3>PlaybackScroller</h3>No Description"
         },
         {
           "className": "PlayIndicatorOverlay",
           "docString": "<h3>PlayIndicatorOverlay</h3>No Description"
         },
         {
           "className": "PlayIndicatorOverlayBase",
           "docString": "<h3>PlayIndicatorOverlayBase</h3>No Description"
         },
         {
           "className": "PlayRegion",
           "docString": "<h3>PlayRegion</h3>No Description"
         },
         {
           "className": "PluginActions",
           "docString": "<h3>PluginActions</h3>No Description"
         },
         {
           "className": "PluginDescriptor",
           "docString": "<h3>PluginDescriptor</h3>No Description"
         },
         {
           "className": "PluginManager",
           "docString": "<h3>PluginManager</h3>PluginManager maintains a list of all plug ins. That covers modules, effects, generators, analysis-effects, commands. It also has functions for shared and private configs - which need to move out "
         },
         {
           "className": "PluginManagerInterface",
           "docString": "<h3>PluginManagerInterface</h3>No Description"
         },
         {
           "className": "PopupMenuTable",
           "docString": "<h3>PopupMenuTable</h3>No Description"
         },
         {
           "className": "PopupMenuTableEntry",
           "docString": "<h3>PopupMenuTableEntry</h3>No Description"
         },
         {
           "className": "Position",
           "docString": "<h3>Position</h3>No Description"
         },
         {
           "className": "private_data",
           "docString": "<h3>private_data</h3>No Description"
         },
         {
           "className": "Profiler",
           "docString": "<h3>Profiler</h3>A simple profiler to measure the average time lengths that a particular task/function takes. Currently not thread-safe and not thread-smart, but it will probably work fine if you use it on a high level "
         },
         {
           "className": "ProgressToMessageTarget",
           "docString": "<h3>ProgressToMessageTarget</h3>ProgressToMessageTarget formats the percentage complete text as a message and sends it to that message target "
         },
         {
           "className": "QPCell",
           "docString": "<h3>QPCell</h3>No Description"
         },
         {
           "className": "QPHandle",
           "docString": "<h3>QPHandle</h3>No Description"
         },
         {
           "className": "QuickPlayIndicatorOverlay",
           "docString": "<h3>QuickPlayIndicatorOverlay</h3>No Description"
         },
         {
           "className": "QuickPlayRulerOverlay",
           "docString": "<h3>QuickPlayRulerOverlay</h3>No Description"
         },
         {
           "className": "RateMenuTable",
           "docString": "<h3>RateMenuTable</h3>No Description"
         },
         {
           "className": "ReadLock",
           "docString": "<h3>ReadLock</h3>No Description"
         },
         {
           "className": "ReadLocker",
           "docString": "<h3>ReadLocker</h3>No Description"
         },
         {
           "className": "ReadProjectResults",
           "docString": "<h3>ReadProjectResults</h3>No Description"
         },
         {
           "className": "ReadUnlocker",
           "docString": "<h3>ReadUnlocker</h3>No Description"
         },
         {
           "className": "RealtimeEffectManager",
           "docString": "<h3>RealtimeEffectManager</h3>No Description"
         },
         {
           "className": "RealtimeEffectState",
           "docString": "<h3>RealtimeEffectState</h3>No Description"
         },
         {
           "className": "Record",
           "docString": "<h3>Record</h3>No Description"
         },
         {
           "className": "RecordingRecoveryHandler",
           "docString": "<h3>RecordingRecoveryHandler</h3>No Description"
         },
         {
           "className": "RecordingSchedule",
           "docString": "<h3>RecordingSchedule</h3>No Description"
         },
         {
           "className": "RefreshCode",
           "docString": "<h3>RefreshCode</h3>Namespace containing an enum 'what to do on a refresh?' "
         },
         {
           "className": "Region",
           "docString": "<h3>Region</h3>Structure to hold region of a wavetrack and a comparison function for sortability "
         },
         {
           "className": "RegionList",
           "docString": "<h3>RegionList</h3>No Description"
         },
         {
           "className": "RegisteredFactory",
           "docString": "<h3>RegisteredFactory</h3>Type meant to be stored by client code in a static variable, and used as a retrieval key to get the manufactured client object back from the host object. It can be destroyed to de-register the factory, but usually not before destruction of statics at program exit "
         },
         {
           "className": "RegisteredMenuItemEnabler",
           "docString": "<h3>RegisteredMenuItemEnabler</h3>No Description"
         },
         {
           "className": "RegisteredStatusWidthFunction",
           "docString": "<h3>RegisteredStatusWidthFunction</h3>No Description"
         },
         {
           "className": "RegisteredToolbarFactory",
           "docString": "<h3>RegisteredToolbarFactory</h3>No Description"
         },
         {
           "className": "RegisterType",
           "docString": "<h3>RegisterType</h3>No Description"
         },
         {
           "className": "Registrar",
           "docString": "<h3>Registrar</h3>Base class for registration callback. Audacity will call providers RegisterNameOfThing() functions with an &Registrar as the argument. RegisterNameOfThing() is then responsible for calling the appropriate callback functions "
         },
         {
           "className": "Resample",
           "docString": "<h3>Resample</h3>Interface to libsoxr "
         },
         {
           "className": "ResampleBuf",
           "docString": "<h3>ResampleBuf</h3>No Description"
         },
         {
           "className": "Response",
           "docString": "<h3>Response</h3>Stores a command response string (and other response data if it becomes necessary) "
         },
         {
           "className": "ResponseQueue",
           "docString": "<h3>ResponseQueue</h3>Allow messages to be sent from the main thread to the script thread "
         },
         {
           "className": "ResponseQueueTarget",
           "docString": "<h3>ResponseQueueTarget</h3>Adds messages to the global response queue (to be sent back to a script) "
         },
         {
           "className": "RestoreValue",
           "docString": "<h3>RestoreValue</h3>Structure used by ValueRestorer "
         },
         {
           "className": "Reverb_priv_t",
           "docString": "<h3>Reverb_priv_t</h3>No Description"
         },
         {
           "className": "reverb_t",
           "docString": "<h3>reverb_t</h3>No Description"
         },
         {
           "className": "RingBuffer",
           "docString": "<h3>RingBuffer</h3>Holds streamed audio samples "
         },
         {
           "className": "RowData",
           "docString": "<h3>RowData</h3>No Description"
         },
         {
           "className": "Ruler",
           "docString": "<h3>Ruler</h3>Used to display a Ruler "
         },
         {
           "className": "SampleBuffer",
           "docString": "<h3>SampleBuffer</h3>No Description"
         },
         {
           "className": "sampleCount",
           "docString": "<h3>sampleCount</h3>No Description"
         },
         {
           "className": "SampleHandle",
           "docString": "<h3>SampleHandle</h3>No Description"
         },
         {
           "className": "SBSMSEffectInterface",
           "docString": "<h3>SBSMSEffectInterface</h3>No Description"
         },
         {
           "className": "ScreenFrameTimer",
           "docString": "<h3>ScreenFrameTimer</h3>No Description"
         },
         {
           "className": "SelectActions",
           "docString": "<h3>SelectActions</h3>No Description"
         },
         {
           "className": "SelectButtonHandle",
           "docString": "<h3>SelectButtonHandle</h3>No Description"
         },
         {
           "className": "SelectedRegion",
           "docString": "<h3>SelectedRegion</h3>Defines a selected portion of a project "
         },
         {
           "className": "SelectedRegionEvent",
           "docString": "<h3>SelectedRegionEvent</h3>No Description"
         },
         {
           "className": "SelectHandle",
           "docString": "<h3>SelectHandle</h3>No Description"
         },
         {
           "className": "SelectionBar",
           "docString": "<h3>SelectionBar</h3>(not quite a Toolbar) at foot of screen for setting and viewing the selection range "
         },
         {
           "className": "SelectionBarListener",
           "docString": "<h3>SelectionBarListener</h3>A parent class of SelectionBar, used to forward events to do with changes in the SelectionBar "
         },
         {
           "className": "SelectionState",
           "docString": "<h3>SelectionState</h3>No Description"
         },
         {
           "className": "SelectionStateChanger",
           "docString": "<h3>SelectionStateChanger</h3>No Description"
         },
         {
           "className": "SelectUtilities",
           "docString": "<h3>SelectUtilities</h3>Namespace for functions for Select menu "
         },
         {
           "className": "SeparatorItem",
           "docString": "<h3>SeparatorItem</h3>No Description"
         },
         {
           "className": "Settings",
           "docString": "<h3>Settings</h3>No Description"
         },
         {
           "className": "Settings",
           "docString": "<h3>Settings</h3>No Description"
         },
         {
           "className": "SFFile",
           "docString": "<h3>SFFile</h3>No Description"
         },
         {
           "className": "SFFileCloser",
           "docString": "<h3>SFFileCloser</h3>No Description"
         },
         {
           "className": "SimpleGuard",
           "docString": "<h3>SimpleGuard</h3>SimpleGuard classes add the second argument of GuardedCall: Frequently useful converter of all exceptions to some failure constant "
         },
         {
           "className": "SimpleGuard< bool >",
           "docString": "<h3>SimpleGuard< bool ></h3>SimpleGuard specialization that returns bool, and defines Default "
         },
         {
           "className": "SimpleGuard< void >",
           "docString": "<h3>SimpleGuard< void ></h3>SimpleGuard specialization that returns nothing, and defines Default "
         },
         {
           "className": "SinCosStruct",
           "docString": "<h3>SinCosStruct</h3>No Description"
         },
         {
           "className": "SinCosTable",
           "docString": "<h3>SinCosTable</h3>No Description"
         },
         {
           "className": "Site",
           "docString": "<h3>Site</h3>No Description"
         },
         {
           "className": "SliderHandle",
           "docString": "<h3>SliderHandle</h3>No Description"
         },
         {
           "className": "SnapManager",
           "docString": "<h3>SnapManager</h3>No Description"
         },
         {
           "className": "SnapPoint",
           "docString": "<h3>SnapPoint</h3>No Description"
         },
         {
           "className": "SnapResults",
           "docString": "<h3>SnapResults</h3>No Description"
         },
         {
           "className": "SoloButtonHandle",
           "docString": "<h3>SoloButtonHandle</h3>No Description"
         },
         {
           "className": "SoundActivatedRecord",
           "docString": "<h3>SoundActivatedRecord</h3>Configures sound activated recording "
         },
         {
           "className": "SourceOutputStream",
           "docString": "<h3>SourceOutputStream</h3>Helper class based on wxOutputStream used to get a png file in text format "
         },
         {
           "className": "soxr_deleter",
           "docString": "<h3>soxr_deleter</h3>No Description"
         },
         {
           "className": "SpecialItem",
           "docString": "<h3>SpecialItem</h3>No Description"
         },
         {
           "className": "State",
           "docString": "<h3>State</h3>No Description"
         },
         {
           "className": "State",
           "docString": "<h3>State</h3>No Description"
         },
         {
           "className": "Statistics",
           "docString": "<h3>Statistics</h3>No Description"
         },
         {
           "className": "StatusBarTarget",
           "docString": "<h3>StatusBarTarget</h3>Displays messages from a command in a wxStatusBar "
         },
         {
           "className": "streamContext",
           "docString": "<h3>streamContext</h3>No Description"
         },
         {
           "className": "StretchHandle",
           "docString": "<h3>StretchHandle</h3>No Description"
         },
         {
           "className": "StretchState",
           "docString": "<h3>StretchState</h3>No Description"
         },
         {
           "className": "Subgroup",
           "docString": "<h3>Subgroup</h3>No Description"
         },
         {
           "className": "SubMenuList",
           "docString": "<h3>SubMenuList</h3>List of SubMenuListEntry "
         },
         {
           "className": "Switch",
           "docString": "<h3>Switch</h3>No Description"
         },
         {
           "className": "Switch< R, ConcreteType >",
           "docString": "<h3>Switch< R, ConcreteType ></h3>No Description"
         },
         {
           "className": "Switch< R, ConcreteType, BaseClass, BaseClasses... >",
           "docString": "<h3>Switch< R, ConcreteType, BaseClass, BaseClasses... ></h3>No Description"
         },
         {
           "className": "Syllable",
           "docString": "<h3>Syllable</h3>Used in LyricsPanel, a Syllable gives positional information to be used with the bouncing ball effect "
         },
         {
           "className": "t_diag_struct",
           "docString": "<h3>t_diag_struct</h3>No Description"
         },
         {
           "className": "TaggedIdentifier",
           "docString": "<h3>TaggedIdentifier</h3>No Description"
         },
         {
           "className": "Tags",
           "docString": "<h3>Tags</h3>ID3 Tags (for MP3) "
         },
         {
           "className": "TagsEditor",
           "docString": "<h3>TagsEditor</h3>Derived from ExpandingToolBar, this dialog allows editing of Tags "
         },
         {
           "className": "TaskProfile",
           "docString": "<h3>TaskProfile</h3>Simple class to keep track of one task that may be called multiple times "
         },
         {
           "className": "TCPLine",
           "docString": "<h3>TCPLine</h3>No Description"
         },
         {
           "className": "Theme",
           "docString": "<h3>Theme</h3>Based on ThemeBase, Theme manages image and icon resources "
         },
         {
           "className": "ThemeBase",
           "docString": "<h3>ThemeBase</h3>Theme management - Image loading and saving "
         },
         {
           "className": "TimeQueue",
           "docString": "<h3>TimeQueue</h3>No Description"
         },
         {
           "className": "TimerHandler",
           "docString": "<h3>TimerHandler</h3>No Description"
         },
         {
           "className": "TimerRecordPathCtrl",
           "docString": "<h3>TimerRecordPathCtrl</h3>No Description"
         },
         {
           "className": "TimeShiftHandle",
           "docString": "<h3>TimeShiftHandle</h3>No Description"
         },
         {
           "className": "TipWindow",
           "docString": "<h3>TipWindow</h3>A wxPopupWindow used to give the numerical value of an LWSlider or ASlider "
         },
         {
           "className": "TitleRestorer",
           "docString": "<h3>TitleRestorer</h3>No Description"
         },
         {
           "className": "Tokenizer",
           "docString": "<h3>Tokenizer</h3>No Description"
         },
         {
           "className": "TopLevelKeystrokeHandlingWindow",
           "docString": "<h3>TopLevelKeystrokeHandlingWindow</h3>No Description"
         },
         {
           "className": "TranslatableArray",
           "docString": "<h3>TranslatableArray</h3>No Description"
         },
         {
           "className": "TranslatedInternalString",
           "docString": "<h3>TranslatedInternalString</h3>No Description"
         },
         {
           "className": "TransportActions",
           "docString": "<h3>TransportActions</h3>No Description"
         },
         {
           "className": "TransportTracks",
           "docString": "<h3>TransportTracks</h3>No Description"
         },
         {
           "className": "Tree",
           "docString": "<h3>Tree</h3>No Description"
         },
         {
           "className": "Triple",
           "docString": "<h3>Triple</h3>No Description"
         },
         {
           "className": "UFileHolder",
           "docString": "<h3>UFileHolder</h3>FFmpeg structure to hold a file pointer and provide a return value when closing the file "
         },
         {
           "className": "UIHandle",
           "docString": "<h3>UIHandle</h3>Short-lived drawing and event-handling object associated with a TrackPanelCell "
         },
         {
           "className": "UndoManager",
           "docString": "<h3>UndoManager</h3>Works with HistoryWindow to provide the Undo functionality "
         },
         {
           "className": "UndoStackElem",
           "docString": "<h3>UndoStackElem</h3>Holds one item with description and time range for the UndoManager "
         },
         {
           "className": "UndoState",
           "docString": "<h3>UndoState</h3>No Description"
         },
         {
           "className": "UnsetBatchProcessing",
           "docString": "<h3>UnsetBatchProcessing</h3>No Description"
         },
         {
           "className": "UpdateSlot",
           "docString": "<h3>UpdateSlot</h3>No Description"
         },
         {
           "className": "ValueRestorer",
           "docString": "<h3>ValueRestorer</h3>Set a variable temporarily in a scope "
         },
         {
           "className": "VampEffect",
           "docString": "<h3>VampEffect</h3>No Description"
         },
         {
           "className": "VampEffectsModule",
           "docString": "<h3>VampEffectsModule</h3>No Description"
         },
         {
           "className": "VarSetter",
           "docString": "<h3>VarSetter</h3>No Description"
         },
         {
           "className": "VelocitySliderHandle",
           "docString": "<h3>VelocitySliderHandle</h3>No Description"
         },
         {
           "className": "ViewActions",
           "docString": "<h3>ViewActions</h3>No Description"
         },
         {
           "className": "ViewInfo",
           "docString": "<h3>ViewInfo</h3>No Description"
         },
         {
           "className": "Visitor",
           "docString": "<h3>Visitor</h3>No Description"
         },
         {
           "className": "VoiceKey",
           "docString": "<h3>VoiceKey</h3>This implements a voice key, detecting either the next \"ON\" or \"OFF\" point "
         },
         {
           "className": "wav_header",
           "docString": "<h3>wav_header</h3>No Description"
         },
         {
           "className": "WindowAccessible",
           "docString": "<h3>WindowAccessible</h3>An alternative to using wxWindowAccessible, which in wxWidgets 3.1.1 contained GetParent() which was incorrect "
         },
         {
           "className": "Worker",
           "docString": "<h3>Worker</h3>No Description"
         },
         {
           "className": "WrappedType",
           "docString": "<h3>WrappedType</h3>Used in type conversions, this wrapper for ints, strings, doubles and enums provides conversions between all the types. Functions that work on wrapped types can quickly be reused to work on any of these types. This cuts out a lot of repetitive code "
         },
         {
           "className": "xmm_mm_union",
           "docString": "<h3>xmm_mm_union</h3>No Description"
         },
         {
           "className": "ZoomHandle",
           "docString": "<h3>ZoomHandle</h3>No Description"
         },
         {
           "className": "ZoomInfo",
           "docString": "<h3>ZoomInfo</h3>No Description"
         },
         {
           "className": "AudioUnitEffectExportDialog",
           "docString": "<h3>AudioUnitEffectExportDialog</h3>No Description"
         },
         {
           "className": "AudioUnitEffectImportDialog",
           "docString": "<h3>AudioUnitEffectImportDialog</h3>No Description"
         },
         {
           "className": "AudioUnitEffectOptionsDialog",
           "docString": "<h3>AudioUnitEffectOptionsDialog</h3>No Description"
         },
         {
           "className": "ContrastDialog",
           "docString": "<h3>ContrastDialog</h3>No Description"
         },
         {
           "className": "EditCurvesDialog",
           "docString": "<h3>EditCurvesDialog</h3>No Description"
         },
         {
           "className": "EffectPresetsDialog",
           "docString": "<h3>EffectPresetsDialog</h3>No Description"
         },
         {
           "className": "FFmpegNotFoundDialog",
           "docString": "<h3>FFmpegNotFoundDialog</h3>No Description"
         },
         {
           "className": "FileDialogBase",
           "docString": "<h3>FileDialogBase</h3>No Description"
         },
         {
           "className": "FileDialogWrapper",
           "docString": "<h3>FileDialogWrapper</h3>No Description"
         },
         {
           "className": "FindDialog",
           "docString": "<h3>FindDialog</h3>No Description"
         },
         {
           "className": "GlobalPrefsDialog",
           "docString": "<h3>GlobalPrefsDialog</h3>No Description"
         },
         {
           "className": "ImportStreamDialog",
           "docString": "<h3>ImportStreamDialog</h3>No Description"
         },
         {
           "className": "LadspaEffectOptionsDialog",
           "docString": "<h3>LadspaEffectOptionsDialog</h3>No Description"
         },
         {
           "className": "LV2EffectSettingsDialog",
           "docString": "<h3>LV2EffectSettingsDialog</h3>No Description"
         },
         {
           "className": "MissingAliasFileDialog",
           "docString": "<h3>MissingAliasFileDialog</h3>No Description"
         },
         {
           "className": "MissingAliasFilesDialog",
           "docString": "<h3>MissingAliasFilesDialog</h3>No Description"
         },
         {
           "className": "PluginRegistrationDialog",
           "docString": "<h3>PluginRegistrationDialog</h3>No Description"
         },
         {
           "className": "SuccessDialog",
           "docString": "<h3>SuccessDialog</h3>No Description"
         },
         {
           "className": "TimerProgressDialog",
           "docString": "<h3>TimerProgressDialog</h3>No Description"
         },
         {
           "className": "VSTEffectOptionsDialog",
           "docString": "<h3>VSTEffectOptionsDialog</h3>No Description"
         },
         {
           "className": "wxDialogWrapper",
           "docString": "<h3>wxDialogWrapper</h3>No Description"
         },
         {
           "className": "wxDirDialogWrapper",
           "docString": "<h3>wxDirDialogWrapper</h3>No Description"
         },
           {
             "className": "Unsorted",
             "docString": "<h3>Unsorted</h3>This longest snake has all the Audacity classes which we have not yet put into one of the other snakes.",
             "isHead": true
           }


<pre>CREDITS:CAPTION=Audacity Classes - Snake Diagram;TIP=</pre>
<h3>Instructions</h3>
<ul>
<li>Hover over blobs on the track for details about that item.
<li>Larger spots have more information about them than smaller ones.
</ul><br><br>
<b>Credits:</b> <em>James Crook ©2019; Data and Image placed in Public Domain</em>


<pre>START:Section 1</pre>
<pre>DO:BRIGHT_OBJECTS=Export</pre>
