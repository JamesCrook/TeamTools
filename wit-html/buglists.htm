<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>What is That?</title>
    <style type="text/css">
        h1 { font-size: 2em; }
        h2 { font-size: 1.5em; }
        h3 { font-size: 1.17em; }
        h4 { font-size: 1.12em; }
        h5 { font-size: .83em; }
        h6 { font-size: .67em; }

        html *
        {
            font-family: Arial;
        }

        #logoback {
            transition: all 0.15s;
            background-color: #edebfc;
            border: 2px solid;
            border-color: #edebfc;
            position:absolute;
            top:1.25em;
            left:0.9375em;
            width:5.75em;
            height:5.75em;
            color:black;
            box-sizing:border-box;
            line-height:5.75em;
            border-radius:2.875em;
            box-shadow:0px 0px 1.25em 1px #000080;"

        }
        #logoback:hover {
            /*background-color: #c7cfff;*/
            border-color: #848ff8;
        }
        #logo
        {
            position:relative;
            top:0.5em;
            left:0.5625em;
            transition: all 0.1s;
            width:4.375em;
            height:4.375em;

        }
        #logo:hover
        {
            /*top:6px;*/
            /*transform: rotate(10deg);*/
        }
        #logo:hover:active {
            width:5em;
            height:5em;
            left:0.25em;
            top:0.0625em;
        }

        div.bt {

            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;

            display:inline-block;
            color:black;
            font-size:13px;
            border: 1px solid;
            padding:2px 15px 2px 15px;
            border-color: #8696b2;
            background-color: #c5d4fc;
            box-shadow: inset 0 -5px 5px 0 #a6c1e7;
        }
        div.bt:hover {
            cursor: pointer;
            /*box-shadow: inset 0 -5px 15px 0 #7c94b7;*/
            background-color: #a9bdff;
            border-color: #2130ba;
        }
        div.bt:hover:active {
            background-color: #a5c3ee;
            box-shadow: inset 0 2px 5px 0 #7c94b7;
        }
        div.linky {
            transition: all 0.15s;
            display:none;
            background-color: #c5d4fc;
            border: 2px solid;
            border-color: #c5d4fc;
            /*border-color: #8696b2;*/
            padding:0px 1.25em 0px 1.25em;
            color:black;
            height:2.25em;
            line-height:2.25em;
            box-sizing:border-box;
            border-radius:1.25em;
            margin:0 auto;
            box-shadow:0 0 20px 1px #000080;
            cursor: pointer;

        }
        div.linky:hover {
           /* background-color: #a5c3ee;*/
            border-color: #848ff8;

        }

        div.pos-resetter {
            width:100%;
            display:inline-block;
            text-align:center;
            position:absolute;
            margin:0 auto;
        }
    </style>
    <script>
        console.log( "Protocol is "+window.location.protocol);
        if (window.location.protocol == "http:"){
            console.log("Http: detected");
            if( window.location.href.indexOf("localhost") < 0 )
                window.location.href = "https:" + window.location.href.slice(5);
        }
    </script>
    <script>
        var SampleIssues = [
  {
    "Bug ID": 1941,
    "Priority": "P4",
    "Severity": "Accessibility",
    "Component": "User Interface",
    "Group": "Accessibility",
    "OS": "All",
    "Status": "NEW",
    "Resolution": "---",
    "Summary": "Seek commands do not work during variable Play at Speed",
    "Keywords": "",
    "Changed": "2018-08-19 03:05:43",
    "Number of Comments": 2,
    "Workaround": "In preferences > Playback, uncheck option 'Vari-Speed Play'.  The shortcuts will then work, but the play-at-speed won't change speed as you play.",
    "Release Note": ""
  }
];

        function fixedThisRelease ( value ){
            if( value["Resolution"] == "---" )
                return false;
            if( value["Bug ID"] > 1841 ) // was QUICKFIXED.
                return false;
            return value["Changed"] > "2018-02-00";

        }

        function isMac(value ){
            if( value["Severity"] == "RepeatableAll" )
                    return true;
            return value["OS"].indexOf( "OS X")!==-1;
        }
        function isLinux(value ){
            if( value["Severity"] == "RepeatableAll" )
                return true;
            return value["OS"].indexOf( "Linux")!==-1;
        }
        function isWindows(value ){
            if( value["Severity"] == "RepeatableAll" )
                return true;
            return value["OS"].indexOf( "Windows")!==-1;
        }

        function isClosed( value ){
            return value["Resolution"] != "---";
        }
        function isOpen( value ){
            return value["Resolution"] == "---";
        }
        function isAccessibility( value ){
            return value["Group"] == "Accessibility";
        }
        function isNotAccessibility( value ){
            return value["Group"] != "Accessibility";
        }

        function bigIssues( value ){
            if( isClosed( value ) )
               return false;
            return value["Bug ID"] > 1930;
        }

        function bug33Issues( value ){
            if( isClosed( value ) )
                return false;
            return value["Severity"] == "Accessibility";
        }
        function configuredFilter( value ){
            return false;
        }
        function configuredFields(){
            var results=["Bug ID"];
            results = ["Bug ID", "Priority","Summary"];
            return results;
        }

        function filterIssues( filterFunction ){
            var results = [];
            for(i=0;i<Issues.length;i++){
                if( filterFunction( Issues[i] ))
                    results.push( Issues[i] );
            }
            return results;
        }

        var fewFields = ["Bug ID", "Summary"];
        var platformFields = ["Bug ID", "Priority", "Summary", "Workaround","Bug ID"];
        var adviceFields = ["Bug ID", "OS",  "Priority", "Summary", "Workaround","Bug ID"];
        var someFields = ["Bug ID", "Priority", "Resolution","Summary","Bug ID"];
        var manyFields = ["Bug ID", "Priority", "Resolution","Summary", "Workaround","Bug ID"];
        var allFields = ["Bug ID", "OS", "Priority", "Resolution","Summary", "Workaround","Group","Bug ID"];

        function tableFromArray( values, cols ){
            var result = "<table>\n";
            var row;
            var col;
            for( row=0;row<(values.length/ cols);row++){
                result += "  <tr>\n";
                for( col=0;col<cols;col++){
                    result += "    <td>" + values[row*cols+col]+ "</td>\n";
                }
                result += "  </tr>\n";
            }
            result += "</table>\n";
            return result;
        }

        function arrayFromIssues( issues, fields ){
            var results = [];
            for( i=0;i<issues.length;i++){
                // Fixup Other -> All
                if( issues[i]["OS"] == "Other" )
                    issues[i]["OS"] = "All";
                for(j=0;j<fields.length;j++){
                    var temp = issues[i][fields[j]];
                    if( fields[j] == "Bug ID" ){
                        // Include hyperlink to issue.
                        temp = '<a href="https://bugzilla.audacityteam.org/show_bug.cgi?id=' +
                        temp + '">' + temp + '</a>';
                    }
                    results.push(temp);
                }
            }
            return results;
        }

        function updateTable( filter, fields ){
            var issues = filterIssues( filter );
            var array  = arrayFromIssues( issues, fields );
            var table  = tableFromArray( array, fields.length );
            var tableDiv = document.getElementById("tableDiv");
            var preamble = " "+issues.length + " issues<br><br>";
            tableDiv.innerHTML = preamble + table;
        }

        function OnClick1(){
            updateTable( bigIssues, fewFields);
        }
        function OnClick2(){
            updateTable( bug33Issues, adviceFields);
        }
        function OnClick3(){
            updateTable( isClosed, manyFields);
        }
        function OnClick4(){
            updateTable( configuredFilter, configuredFields());
        }

        function orFunc( funcs ){
            return function( issue ){
                var i;
                for(i=0;i<funcs.length;i++){
                    if( funcs[i]( issue ) )
                       return true;
                }
                return false;
            };
        }
        function andFunc( funcs ){
            return function( issue ){
                var i;
                for(i=0;i<funcs.length;i++){
                    if( !funcs[i]( issue ) )
                        return false;
                }
                return true;
            };
        }
    </script>
    <script data-cfasync="false" src="./js/issues.js"></script>
    <!--<script data-cfasync="false" src="./js/download.js"></script>-->

</head>
<body>
<ul>
    <li><button onclick = "updateTable( andFunc( [isOpen,            isAccessibility]), allFields);">View</button> All Accessibility Issues.</li>
    <li><button onclick = "updateTable( andFunc( [isOpen, isMac,     isAccessibility]), allFields);">View</button> Accessibility Issues on Mac.</li>
    <li><button onclick = "updateTable( andFunc( [isOpen, isLinux,   isAccessibility]), allFields);">View</button> Accessibility Issues on Linux.</li>
    <li><button onclick = "updateTable( andFunc( [isOpen, isWindows, isAccessibility]), allFields);">View</button> Accessibility Issues on Windows.</li>
    <li><button onclick = "updateTable( andFunc( [isOpen,            isNotAccessibility]), allFields);">View</button> All other Live Issues.</li>
    <li><button onclick = "updateTable( andFunc( [isOpen, isMac,     isNotAccessibility]), allFields);">View</button> Other Live Issues on Mac.</li>
    <li><button onclick = "updateTable( andFunc( [isOpen, isLinux,   isNotAccessibility]), allFields);">View</button> Other Live Issues on Linux.</li>
    <li><button onclick = "updateTable( andFunc( [isOpen, isWindows, isNotAccessibility]), allFields);">View</button> Other Live Issues on Windows.</li>
    <li><button onclick = "updateTable( fixedThisRelease,                                  allFields);">View</button> Fixed This Release.</li>
</ul>
<div id="tableDiv"></div>
</body>
</html>